general:
  branches:
    ignore:
      - /work\/.*/

machine:
  services:
    - docker
    - postgresql
    - redis
  environment:
    GOPATH: $HOME
    REPO: ../src/sourcegraph.com/sourcegraph/sourcegraph
    PGUSER: ubuntu
    PGDATABASE: circle_test
    PGSSLMODE: disable
    REDIS_MASTER_ENDPOINT: ":6379"
    LONG_VERSION: $(printf %05d $CIRCLE_BUILD_NUM)_$(date +%Y-%m-%d)_${CIRCLE_SHA1:0:7}
    YARN_VERSION: 0.18.1
    PATH: "${PATH}:${HOME}/.yarn/bin"

    # Don't block on `git diff` invocations of `less`.
    GIT_PAGER:
  node:
    version: 6.6.0
  php:
    version: 7.0.7

dependencies:
  pre:
    - |
      if [[ ! -e ~/.yarn/bin/yarn || $(yarn --version) != "${YARN_VERSION}" ]]; then
        curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
      fi
    - echo "memory_limit = -1" > /opt/circleci/php/$(phpenv global)/etc/conf.d/memory.ini
  cache_directories:
    - ~/cache
    - ~/.yarn
    - ~/.cache/yarn
    - ~/bin
    - ~/.composer/cache

  override:
    - ./dev/ci/install-go.sh
    - ./dev/ci/install-test-tools.sh
    - ./dev/ci/install-checkup.sh
    - ./dev/ci/install-ctags.sh
    - (cd ui && yarn)
    - (cd ui/scripts/tsmapimports && yarn)

    - git config --global user.email "ci@example.com"
    - git config --global user.name "CI User"

    - mkdir -p src/sourcegraph.com/sourcegraph && mv sourcegraph src/sourcegraph.com/sourcegraph/sourcegraph && mkdir sourcegraph:
        pwd: ..

test:
  override:
    - ./dev/ci/run-tests.sh:
        pwd: $REPO
        parallel: true

deployment:
  master-branch:
    branch: master
    commands:
      - ./dev/circle-build-docker-image.sh $LONG_VERSION:
          pwd: $REPO
      - docker tag us.gcr.io/sourcegraph-dev/sourcegraph:$LONG_VERSION us.gcr.io/sourcegraph-dev/sourcegraph:latest
      - gcloud docker -- push us.gcr.io/sourcegraph-dev/sourcegraph:latest
      - curl http://deploy-bot.sourcegraph.com/set-branch-version -F "token=$DEPLOY_BOT_TOKEN" -F "branch=master" -F "version=$LONG_VERSION" -F "user=$CIRCLE_USERNAME"
      - echo $LONG_VERSION | gsutil cp - gs://sourcegraph-metadata/latest-successful-build

  staging-branch:
    branch: [staging, staging2, staging3, staging4]
    commands:
      - ./dev/circle-build-docker-image.sh $LONG_VERSION:
          pwd: $REPO
      - curl http://deploy-bot.sourcegraph.com/set-branch-version -F "token=$DEPLOY_BOT_TOKEN" -F "branch=$CIRCLE_BRANCH" -F "version=$LONG_VERSION" -F "user=$CIRCLE_USERNAME"

  docker-images:
    branch: /docker-images\/.*/
    commands:
      - make -f dev/ci/Makefile.docker ${CIRCLE_BRANCH:14} TAG=$LONG_VERSION:
          pwd: $REPO
      - curl http://deploy-bot.sourcegraph.com/set-branch-version -F "token=$DEPLOY_BOT_TOKEN" -F "branch=$CIRCLE_BRANCH" -F "version=$LONG_VERSION" -F "user=$CIRCLE_USERNAME"
