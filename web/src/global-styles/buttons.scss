$btn-padding-x: $spacer;
$btn-padding-y: $spacer * 0.65;
$btn-sm-factor: $sm-factor * 0.8;
$btn-lg-factor: $lg-factor;

.btn {
    display: inline-flex;
    text-align: center;
    align-items: center;
    user-select: none;
    border: $btn-border-width solid transparent;
    font-weight: normal;
    line-height: $line-height-base;
    vertical-align: middle;

    // Make buttons equal height as inputs.
    $input-extra-border-width: $input-border-width - $btn-border-width;
    padding: calc(#{$btn-padding-y} + #{$input-extra-border-width})
        calc(#{$btn-padding-x} + #{$input-extra-border-width});
    font-size: var(--font-size-base);
    &.btn-sm {
        padding: calc(#{$btn-padding-y * $btn-sm-factor} + #{$input-extra-border-width})
            calc(#{$btn-padding-x * $btn-sm-factor} + #{$input-extra-border-width});
        font-size: var(--font-size-sm) !important;
    }
    &.btn-lg {
        padding: calc(#{$btn-padding-y * $btn-lg-factor} + #{$input-extra-border-width})
            calc(#{$btn-padding-x * $btn-lg-factor} + #{$input-extra-border-width});
        font-size: var(--font-size-lg) !important;
    }

    &:not(:disabled, .disabled) {
        cursor: pointer;
        &:hover {
            text-decoration: none;
        }
        &.focus-visible {
            @include focus-ring(-1px, 1px);
        }
    }
    &:disabled,
    &.disabled {
        filter: grayscale(35%);
        opacity: 0.5;
    }
}

@mixin btn-variant($name) {
    .btn-#{$name} {
        background-color: var(--#{$name});
        border-color: var(--#{$name});
        &,
        &:hover:not(:disabled, .disabled) {
            color: var(--#{$name}-contrast);
        }
        &:not(:disabled, .disabled) {
            &:hover,
            &.focus-visible {
                background-color: var(--#{$name}-hover);
            }
        }
    }
}
@each $name, $color in $theme-colors {
    @include btn-variant($name);
}

.btn-link {
    color: var(--link-color);
    text-decoration: var(--link-decoration);
    background-color: transparent;

    &:hover,
    &.focus-visible {
        color: var(--link-hover-color);
        text-decoration: var(--link-hover-decoration);
    }

    &:disabled,
    &.disabled {
        opacity: 0.75;
        pointer-events: none;
    }
}

// This class is meant for clickable icons
// It is NOT meant for buttons with icons in it
.btn-icon {
    margin: 0;
    padding: 0;
    background: transparent;
    color: inherit;
    display: flex;
    align-items: center;
    border: none;
    cursor: pointer;

    .icon {
        @extend .icon-inline;
    }
}

.btn-group {
    display: inline-flex;
}
