// GENERATED CODE - DO NOT EDIT!
//
// Generated by:
//
//   go run gen_context_and_mock.go -o1 context.go -o2 mockstore/mockstores.go
//
// Called via:
//
//   go generate
//

package mockstore

import (
	srcstore "sourcegraph.com/sourcegraph/srclib/store"
	"src.sourcegraph.com/sourcegraph/store"
)

// Stores has a field for each store interface with the concrete mock type (to obviate the need for tedious type assertions in test code).
type Stores struct {
	Accounts           Accounts
	Authorizations     Authorizations
	BuildLogs          BuildLogs
	Builds             Builds
	Directory          Directory
	ExternalAuthTokens ExternalAuthTokens
	Graph              srcstore.MockMultiRepoStore
	Invites            Invites
	Orgs               Orgs
	Password           Password
	RegisteredClients  RegisteredClients
	RepoConfigs        RepoConfigs
	RepoCounters       RepoCounters
	RepoPerms          RepoPerms
	RepoStatuses       RepoStatuses
	RepoVCS            RepoVCS
	Repos              Repos
	Storage            Storage
	Users              Users
	Waitlist           Waitlist
}

func (s *Stores) Stores() store.Stores {
	return store.Stores{
		Accounts:           &s.Accounts,
		Authorizations:     &s.Authorizations,
		BuildLogs:          &s.BuildLogs,
		Builds:             &s.Builds,
		Directory:          &s.Directory,
		ExternalAuthTokens: &s.ExternalAuthTokens,
		Graph:              &s.Graph,
		Invites:            &s.Invites,
		Orgs:               &s.Orgs,
		Password:           &s.Password,
		RegisteredClients:  &s.RegisteredClients,
		RepoConfigs:        &s.RepoConfigs,
		RepoCounters:       &s.RepoCounters,
		RepoPerms:          &s.RepoPerms,
		RepoStatuses:       &s.RepoStatuses,
		RepoVCS:            &s.RepoVCS,
		Repos:              &s.Repos,
		Storage:            &s.Storage,
		Users:              &s.Users,
		Waitlist:           &s.Waitlist,
	}
}
