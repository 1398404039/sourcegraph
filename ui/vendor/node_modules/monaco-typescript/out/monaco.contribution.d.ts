import { CompilerOptions } from "typescript";
import { default as IEvent } from "vs/base/common/event";
import { IDisposable } from "vs/base/common/lifecycle";
export declare class LanguageServiceDefaultsImpl {
    private _onDidChange;
    private _extraLibs;
    private _workerMaxIdleTime;
    private _compilerOptions;
    private _diagnosticsOptions;
    constructor(compilerOptions: CompilerOptions, diagnosticsOptions: any);
    readonly onDidChange: IEvent<any>;
    getExtraLibs(): {
        [path: string]: string;
    };
    addExtraLib(content: string, filePath?: string): IDisposable;
    getCompilerOptions(): CompilerOptions;
    setCompilerOptions(options: CompilerOptions): void;
    getDiagnosticsOptions(): any;
    setDiagnosticsOptions(options: any): void;
    setMaximunWorkerIdleTime(value: number): void;
    getWorkerMaxIdleTime(): number;
}
