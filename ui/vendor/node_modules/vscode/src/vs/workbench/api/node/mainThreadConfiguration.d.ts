import { TPromise } from 'vs/base/common/winjs.base';
import { IThreadService } from 'vs/workbench/services/thread/common/threadService';
import { IWorkspaceConfigurationService } from 'vs/workbench/services/configuration/common/configuration';
import { IConfigurationEditingService, ConfigurationTarget } from 'vs/workbench/services/configuration/common/configurationEditing';
import { MainThreadConfigurationShape } from './extHost.protocol';
export declare class MainThreadConfiguration extends MainThreadConfigurationShape {
    private _configurationEditingService;
    private _toDispose;
    constructor(configurationEditingService: IConfigurationEditingService, configurationService: IWorkspaceConfigurationService, threadService: IThreadService);
    dispose(): void;
    $updateConfigurationOption(target: ConfigurationTarget, key: string, value: any): TPromise<void>;
    $removeConfigurationOption(target: ConfigurationTarget, key: string): TPromise<void>;
}
