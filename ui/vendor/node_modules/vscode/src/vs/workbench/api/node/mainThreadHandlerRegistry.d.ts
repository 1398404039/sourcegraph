/**
 * MainThreadHandlerRegistry maintains a collection of objects by handle.
 */
export declare class MainThreadHandlerRegistry<T> {
    private _nextChildHandle;
    private _registrations;
    /**
     * registerChild registers a child object of handle.
     * It returns the new handle assigned to the child.
     */
    registerChild(handle: number, child: T): number;
    /**
     * getChild returns the object associated with handle and childHandle, if it exists.
     */
    getChild(handle: number, childHandle: number): T | undefined;
    /**
     * unregister unregisters all child objects of handle.
     */
    unregister(handle: number): void;
    /**
     * unregisterChild unregisters the object associated with handle and childHandle.
     */
    unregisterChild(handle: number, childHandle: number): void;
}
