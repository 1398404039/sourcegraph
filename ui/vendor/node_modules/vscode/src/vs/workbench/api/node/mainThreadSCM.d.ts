import { IThreadService } from 'vs/workbench/services/thread/common/threadService';
import { ISCMService } from 'vs/workbench/services/scm/common/scm';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { MainThreadSCMShape, SCMProviderFeatures, SCMRawResourceGroup } from './extHost.protocol';
export declare class MainThreadSCM extends MainThreadSCMShape {
    private instantiationService;
    private scmService;
    private proxy;
    private providers;
    private inputBoxListener;
    constructor(threadService: IThreadService, instantiationService: IInstantiationService, scmService: ISCMService);
    $register(id: string, features: SCMProviderFeatures): void;
    $unregister(id: string): void;
    $onChange(id: string, rawResourceGroups: SCMRawResourceGroup[], count: number | undefined, state: string | undefined): void;
    $setInputBoxValue(value: string): void;
    dispose(): void;
}
