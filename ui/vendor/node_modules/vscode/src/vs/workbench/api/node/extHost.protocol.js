/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var threadService_1 = require("vs/workbench/services/thread/common/threadService");
var InstanceCollection = (function () {
    function InstanceCollection() {
        this._items = Object.create(null);
    }
    InstanceCollection.prototype.define = function (id) {
        var that = this;
        return new (function () {
            function class_1() {
            }
            class_1.prototype.set = function (value) {
                that._set(id, value);
                return value;
            };
            return class_1;
        }());
    };
    InstanceCollection.prototype._set = function (id, value) {
        this._items[id.id] = value;
    };
    InstanceCollection.prototype.finish = function (isMain, threadService) {
        var _this = this;
        var expected = (isMain ? exports.MainContext : exports.ExtHostContext);
        Object.keys(expected).forEach(function (key) {
            var id = expected[key];
            var value = _this._items[id.id];
            if (!value) {
                throw new Error("Missing actor " + key + " (isMain: " + id.isMain + ", id:  " + id.id + ")");
            }
            threadService.set(id, value);
        });
    };
    return InstanceCollection;
}());
exports.InstanceCollection = InstanceCollection;
function ni() { return new Error('Not implemented'); }
// --- main thread
var MainThreadCommandsShape = (function () {
    function MainThreadCommandsShape() {
    }
    MainThreadCommandsShape.prototype.$registerCommand = function (id) { throw ni(); };
    MainThreadCommandsShape.prototype.$unregisterCommand = function (id) { throw ni(); };
    MainThreadCommandsShape.prototype.$executeCommand = function (id, args) { throw ni(); };
    MainThreadCommandsShape.prototype.$getCommands = function () { throw ni(); };
    return MainThreadCommandsShape;
}());
exports.MainThreadCommandsShape = MainThreadCommandsShape;
var MainThreadConfigurationShape = (function () {
    function MainThreadConfigurationShape() {
    }
    MainThreadConfigurationShape.prototype.$updateConfigurationOption = function (target, key, value) { throw ni(); };
    MainThreadConfigurationShape.prototype.$removeConfigurationOption = function (target, key) { throw ni(); };
    return MainThreadConfigurationShape;
}());
exports.MainThreadConfigurationShape = MainThreadConfigurationShape;
var MainThreadDiagnosticsShape = (function () {
    function MainThreadDiagnosticsShape() {
    }
    MainThreadDiagnosticsShape.prototype.$changeMany = function (owner, entries) { throw ni(); };
    MainThreadDiagnosticsShape.prototype.$clear = function (owner) { throw ni(); };
    return MainThreadDiagnosticsShape;
}());
exports.MainThreadDiagnosticsShape = MainThreadDiagnosticsShape;
var MainThreadDocumentsShape = (function () {
    function MainThreadDocumentsShape() {
    }
    MainThreadDocumentsShape.prototype.$tryOpenDocument = function (uri) { throw ni(); };
    MainThreadDocumentsShape.prototype.$registerTextContentProvider = function (handle, scheme) { throw ni(); };
    MainThreadDocumentsShape.prototype.$onVirtualDocumentChange = function (uri, value) { throw ni(); };
    MainThreadDocumentsShape.prototype.$unregisterTextContentProvider = function (handle) { throw ni(); };
    MainThreadDocumentsShape.prototype.$trySaveDocument = function (uri) { throw ni(); };
    return MainThreadDocumentsShape;
}());
exports.MainThreadDocumentsShape = MainThreadDocumentsShape;
var MainThreadEditorsShape = (function () {
    function MainThreadEditorsShape() {
    }
    MainThreadEditorsShape.prototype.$tryShowTextDocument = function (resource, position, preserveFocus) { throw ni(); };
    MainThreadEditorsShape.prototype.$registerTextEditorDecorationType = function (key, options) { throw ni(); };
    MainThreadEditorsShape.prototype.$removeTextEditorDecorationType = function (key) { throw ni(); };
    MainThreadEditorsShape.prototype.$tryShowEditor = function (id, position) { throw ni(); };
    MainThreadEditorsShape.prototype.$tryHideEditor = function (id) { throw ni(); };
    MainThreadEditorsShape.prototype.$trySetOptions = function (id, options) { throw ni(); };
    MainThreadEditorsShape.prototype.$trySetDecorations = function (id, key, ranges) { throw ni(); };
    MainThreadEditorsShape.prototype.$tryRevealRange = function (id, range, revealType) { throw ni(); };
    MainThreadEditorsShape.prototype.$trySetSelections = function (id, selections) { throw ni(); };
    MainThreadEditorsShape.prototype.$tryApplyEdits = function (id, modelVersionId, edits, opts) { throw ni(); };
    return MainThreadEditorsShape;
}());
exports.MainThreadEditorsShape = MainThreadEditorsShape;
var MainThreadTreeExplorersShape = (function () {
    function MainThreadTreeExplorersShape() {
    }
    MainThreadTreeExplorersShape.prototype.$registerTreeExplorerNodeProvider = function (providerId) { throw ni(); };
    return MainThreadTreeExplorersShape;
}());
exports.MainThreadTreeExplorersShape = MainThreadTreeExplorersShape;
var MainThreadErrorsShape = (function () {
    function MainThreadErrorsShape() {
    }
    MainThreadErrorsShape.prototype.onUnexpectedExtHostError = function (err) { throw ni(); };
    return MainThreadErrorsShape;
}());
exports.MainThreadErrorsShape = MainThreadErrorsShape;
var MainThreadLanguageFeaturesShape = (function () {
    function MainThreadLanguageFeaturesShape() {
    }
    MainThreadLanguageFeaturesShape.prototype.$unregister = function (handle) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerOutlineSupport = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerCodeLensSupport = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerDeclaractionSupport = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerHoverProvider = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerDocumentHighlightProvider = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerReferenceSupport = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerQuickFixSupport = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerDocumentFormattingSupport = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerRangeFormattingSupport = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerOnTypeFormattingSupport = function (handle, selector, autoFormatTriggerCharacters) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerNavigateTypeSupport = function (handle) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerRenameSupport = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerSuggestSupport = function (handle, selector, triggerCharacters) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerSignatureHelpProvider = function (handle, selector, triggerCharacter) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$registerDocumentLinkProvider = function (handle, selector) { throw ni(); };
    MainThreadLanguageFeaturesShape.prototype.$setLanguageConfiguration = function (handle, languageId, configuration) { throw ni(); };
    return MainThreadLanguageFeaturesShape;
}());
exports.MainThreadLanguageFeaturesShape = MainThreadLanguageFeaturesShape;
var MainThreadLanguagesShape = (function () {
    function MainThreadLanguagesShape() {
    }
    MainThreadLanguagesShape.prototype.$getLanguages = function () { throw ni(); };
    return MainThreadLanguagesShape;
}());
exports.MainThreadLanguagesShape = MainThreadLanguagesShape;
var MainThreadMessageServiceShape = (function () {
    function MainThreadMessageServiceShape() {
    }
    MainThreadMessageServiceShape.prototype.$showMessage = function (severity, message, commands) { throw ni(); };
    return MainThreadMessageServiceShape;
}());
exports.MainThreadMessageServiceShape = MainThreadMessageServiceShape;
var MainThreadOutputServiceShape = (function () {
    function MainThreadOutputServiceShape() {
    }
    MainThreadOutputServiceShape.prototype.$append = function (channelId, label, value) { throw ni(); };
    MainThreadOutputServiceShape.prototype.$clear = function (channelId, label) { throw ni(); };
    MainThreadOutputServiceShape.prototype.$reveal = function (channelId, label, preserveFocus) { throw ni(); };
    MainThreadOutputServiceShape.prototype.$close = function (channelId) { throw ni(); };
    return MainThreadOutputServiceShape;
}());
exports.MainThreadOutputServiceShape = MainThreadOutputServiceShape;
var MainThreadTerminalServiceShape = (function () {
    function MainThreadTerminalServiceShape() {
    }
    MainThreadTerminalServiceShape.prototype.$createTerminal = function (name, shellPath, shellArgs) { throw ni(); };
    MainThreadTerminalServiceShape.prototype.$dispose = function (terminalId) { throw ni(); };
    MainThreadTerminalServiceShape.prototype.$hide = function (terminalId) { throw ni(); };
    MainThreadTerminalServiceShape.prototype.$sendText = function (terminalId, text, addNewLine) { throw ni(); };
    MainThreadTerminalServiceShape.prototype.$show = function (terminalId, preserveFocus) { throw ni(); };
    return MainThreadTerminalServiceShape;
}());
exports.MainThreadTerminalServiceShape = MainThreadTerminalServiceShape;
var MainThreadQuickOpenShape = (function () {
    function MainThreadQuickOpenShape() {
    }
    MainThreadQuickOpenShape.prototype.$show = function (options) { throw ni(); };
    MainThreadQuickOpenShape.prototype.$setItems = function (items) { throw ni(); };
    MainThreadQuickOpenShape.prototype.$setError = function (error) { throw ni(); };
    MainThreadQuickOpenShape.prototype.$input = function (options, validateInput) { throw ni(); };
    return MainThreadQuickOpenShape;
}());
exports.MainThreadQuickOpenShape = MainThreadQuickOpenShape;
var MainThreadStatusBarShape = (function () {
    function MainThreadStatusBarShape() {
    }
    MainThreadStatusBarShape.prototype.$setEntry = function (id, extensionId, text, tooltip, command, color, alignment, priority) { throw ni(); };
    MainThreadStatusBarShape.prototype.$dispose = function (id) { throw ni(); };
    return MainThreadStatusBarShape;
}());
exports.MainThreadStatusBarShape = MainThreadStatusBarShape;
var MainThreadStorageShape = (function () {
    function MainThreadStorageShape() {
    }
    MainThreadStorageShape.prototype.$getValue = function (shared, key) { throw ni(); };
    MainThreadStorageShape.prototype.$setValue = function (shared, key, value) { throw ni(); };
    return MainThreadStorageShape;
}());
exports.MainThreadStorageShape = MainThreadStorageShape;
var MainThreadTelemetryShape = (function () {
    function MainThreadTelemetryShape() {
    }
    MainThreadTelemetryShape.prototype.$publicLog = function (eventName, data) { throw ni(); };
    MainThreadTelemetryShape.prototype.$getTelemetryInfo = function () { throw ni(); };
    return MainThreadTelemetryShape;
}());
exports.MainThreadTelemetryShape = MainThreadTelemetryShape;
var MainThreadWorkspaceShape = (function () {
    function MainThreadWorkspaceShape() {
    }
    MainThreadWorkspaceShape.prototype.$startSearch = function (include, exclude, maxResults, requestId) { throw ni(); };
    MainThreadWorkspaceShape.prototype.$cancelSearch = function (requestId) { throw ni(); };
    MainThreadWorkspaceShape.prototype.$saveAll = function (includeUntitled) { throw ni(); };
    MainThreadWorkspaceShape.prototype.$applyWorkspaceEdit = function (edits) { throw ni(); };
    return MainThreadWorkspaceShape;
}());
exports.MainThreadWorkspaceShape = MainThreadWorkspaceShape;
var MainProcessExtensionServiceShape = (function () {
    function MainProcessExtensionServiceShape() {
    }
    MainProcessExtensionServiceShape.prototype.$localShowMessage = function (severity, msg) { throw ni(); };
    MainProcessExtensionServiceShape.prototype.$onExtensionActivated = function (extensionId) { throw ni(); };
    MainProcessExtensionServiceShape.prototype.$onExtensionActivationFailed = function (extensionId) { throw ni(); };
    return MainProcessExtensionServiceShape;
}());
exports.MainProcessExtensionServiceShape = MainProcessExtensionServiceShape;
// -- extension host
var ExtHostCommandsShape = (function () {
    function ExtHostCommandsShape() {
    }
    ExtHostCommandsShape.prototype.$executeContributedCommand = function (id) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        throw ni();
    };
    ExtHostCommandsShape.prototype.$getContributedCommandHandlerDescriptions = function () { throw ni(); };
    return ExtHostCommandsShape;
}());
exports.ExtHostCommandsShape = ExtHostCommandsShape;
var ExtHostConfigurationShape = (function () {
    function ExtHostConfigurationShape() {
    }
    ExtHostConfigurationShape.prototype.$acceptConfigurationChanged = function (values) { throw ni(); };
    return ExtHostConfigurationShape;
}());
exports.ExtHostConfigurationShape = ExtHostConfigurationShape;
var ExtHostDiagnosticsShape = (function () {
    function ExtHostDiagnosticsShape() {
    }
    return ExtHostDiagnosticsShape;
}());
exports.ExtHostDiagnosticsShape = ExtHostDiagnosticsShape;
var ExtHostDocumentsShape = (function () {
    function ExtHostDocumentsShape() {
    }
    ExtHostDocumentsShape.prototype.$provideTextDocumentContent = function (handle, uri) { throw ni(); };
    ExtHostDocumentsShape.prototype.$acceptModelAdd = function (initData) { throw ni(); };
    ExtHostDocumentsShape.prototype.$acceptModelModeChanged = function (strURL, oldModeId, newModeId) { throw ni(); };
    ExtHostDocumentsShape.prototype.$acceptModelSaved = function (strURL) { throw ni(); };
    ExtHostDocumentsShape.prototype.$acceptModelDirty = function (strURL) { throw ni(); };
    ExtHostDocumentsShape.prototype.$acceptModelReverted = function (strURL) { throw ni(); };
    ExtHostDocumentsShape.prototype.$acceptModelRemoved = function (strURL) { throw ni(); };
    ExtHostDocumentsShape.prototype.$acceptModelChanged = function (strURL, events, isDirty) { throw ni(); };
    return ExtHostDocumentsShape;
}());
exports.ExtHostDocumentsShape = ExtHostDocumentsShape;
var ExtHostDocumentSaveParticipantShape = (function () {
    function ExtHostDocumentSaveParticipantShape() {
    }
    ExtHostDocumentSaveParticipantShape.prototype.$participateInSave = function (resource, reason) { throw ni(); };
    return ExtHostDocumentSaveParticipantShape;
}());
exports.ExtHostDocumentSaveParticipantShape = ExtHostDocumentSaveParticipantShape;
var ExtHostEditorsShape = (function () {
    function ExtHostEditorsShape() {
    }
    ExtHostEditorsShape.prototype.$acceptTextEditorAdd = function (data) { throw ni(); };
    ExtHostEditorsShape.prototype.$acceptOptionsChanged = function (id, opts) { throw ni(); };
    ExtHostEditorsShape.prototype.$acceptSelectionsChanged = function (id, event) { throw ni(); };
    ExtHostEditorsShape.prototype.$acceptActiveEditorAndVisibleEditors = function (id, visibleIds) { throw ni(); };
    ExtHostEditorsShape.prototype.$acceptEditorPositionData = function (data) { throw ni(); };
    ExtHostEditorsShape.prototype.$acceptTextEditorRemove = function (id) { throw ni(); };
    return ExtHostEditorsShape;
}());
exports.ExtHostEditorsShape = ExtHostEditorsShape;
var ExtHostTreeExplorersShape = (function () {
    function ExtHostTreeExplorersShape() {
    }
    ExtHostTreeExplorersShape.prototype.$provideRootNode = function (providerId) { throw ni(); };
    ;
    ExtHostTreeExplorersShape.prototype.$resolveChildren = function (providerId, node) { throw ni(); };
    ExtHostTreeExplorersShape.prototype.$getInternalCommand = function (providerId, node) { throw ni(); };
    return ExtHostTreeExplorersShape;
}());
exports.ExtHostTreeExplorersShape = ExtHostTreeExplorersShape;
var ExtHostExtensionServiceShape = (function () {
    function ExtHostExtensionServiceShape() {
    }
    ExtHostExtensionServiceShape.prototype.$localShowMessage = function (severity, msg) { throw ni(); };
    ExtHostExtensionServiceShape.prototype.$activateExtension = function (extensionDescription) { throw ni(); };
    return ExtHostExtensionServiceShape;
}());
exports.ExtHostExtensionServiceShape = ExtHostExtensionServiceShape;
var ExtHostFileSystemEventServiceShape = (function () {
    function ExtHostFileSystemEventServiceShape() {
    }
    ExtHostFileSystemEventServiceShape.prototype.$onFileEvent = function (events) { throw ni(); };
    return ExtHostFileSystemEventServiceShape;
}());
exports.ExtHostFileSystemEventServiceShape = ExtHostFileSystemEventServiceShape;
var ObjectIdentifier;
(function (ObjectIdentifier) {
    ObjectIdentifier.name = '$ident';
    function mixin(obj, id) {
        Object.defineProperty(obj, ObjectIdentifier.name, { value: id, enumerable: true });
        return obj;
    }
    ObjectIdentifier.mixin = mixin;
    function of(obj) {
        return obj[ObjectIdentifier.name];
    }
    ObjectIdentifier.of = of;
})(ObjectIdentifier = exports.ObjectIdentifier || (exports.ObjectIdentifier = {}));
var ExtHostHeapServiceShape = (function () {
    function ExtHostHeapServiceShape() {
    }
    ExtHostHeapServiceShape.prototype.$onGarbageCollection = function (ids) { throw ni(); };
    return ExtHostHeapServiceShape;
}());
exports.ExtHostHeapServiceShape = ExtHostHeapServiceShape;
var ExtHostLanguageFeaturesShape = (function () {
    function ExtHostLanguageFeaturesShape() {
    }
    ExtHostLanguageFeaturesShape.prototype.$provideDocumentSymbols = function (handle, resource) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideCodeLenses = function (handle, resource) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$resolveCodeLens = function (handle, resource, symbol) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideDefinition = function (handle, resource, position) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideHover = function (handle, resource, position) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideDocumentHighlights = function (handle, resource, position) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideReferences = function (handle, resource, position, context) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideCodeActions = function (handle, resource, range) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideDocumentFormattingEdits = function (handle, resource, options) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideDocumentRangeFormattingEdits = function (handle, resource, range, options) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideOnTypeFormattingEdits = function (handle, resource, position, ch, options) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideWorkspaceSymbols = function (handle, search) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$resolveWorkspaceSymbol = function (handle, symbol) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideRenameEdits = function (handle, resource, position, newName) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideCompletionItems = function (handle, resource, position) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$resolveCompletionItem = function (handle, resource, position, suggestion) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideSignatureHelp = function (handle, resource, position) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$provideDocumentLinks = function (handle, resource) { throw ni(); };
    ExtHostLanguageFeaturesShape.prototype.$resolveDocumentLink = function (handle, link) { throw ni(); };
    return ExtHostLanguageFeaturesShape;
}());
exports.ExtHostLanguageFeaturesShape = ExtHostLanguageFeaturesShape;
var ExtHostQuickOpenShape = (function () {
    function ExtHostQuickOpenShape() {
    }
    ExtHostQuickOpenShape.prototype.$onItemSelected = function (handle) { throw ni(); };
    ExtHostQuickOpenShape.prototype.$validateInput = function (input) { throw ni(); };
    return ExtHostQuickOpenShape;
}());
exports.ExtHostQuickOpenShape = ExtHostQuickOpenShape;
var ExtHostTerminalServiceShape = (function () {
    function ExtHostTerminalServiceShape() {
    }
    ExtHostTerminalServiceShape.prototype.$acceptTerminalClosed = function (id) { throw ni(); };
    ExtHostTerminalServiceShape.prototype.$acceptTerminalProcessId = function (id, processId) { throw ni(); };
    return ExtHostTerminalServiceShape;
}());
exports.ExtHostTerminalServiceShape = ExtHostTerminalServiceShape;
// --- proxy identifiers
exports.MainContext = {
    MainThreadCommands: threadService_1.createMainContextProxyIdentifier('MainThreadCommands', MainThreadCommandsShape),
    MainThreadConfiguration: threadService_1.createMainContextProxyIdentifier('MainThreadConfiguration', MainThreadConfigurationShape),
    MainThreadDiagnostics: threadService_1.createMainContextProxyIdentifier('MainThreadDiagnostics', MainThreadDiagnosticsShape),
    MainThreadDocuments: threadService_1.createMainContextProxyIdentifier('MainThreadDocuments', MainThreadDocumentsShape),
    MainThreadEditors: threadService_1.createMainContextProxyIdentifier('MainThreadEditors', MainThreadEditorsShape),
    MainThreadErrors: threadService_1.createMainContextProxyIdentifier('MainThreadErrors', MainThreadErrorsShape),
    MainThreadExplorers: threadService_1.createMainContextProxyIdentifier('MainThreadExplorers', MainThreadTreeExplorersShape),
    MainThreadLanguageFeatures: threadService_1.createMainContextProxyIdentifier('MainThreadLanguageFeatures', MainThreadLanguageFeaturesShape),
    MainThreadLanguages: threadService_1.createMainContextProxyIdentifier('MainThreadLanguages', MainThreadLanguagesShape),
    MainThreadMessageService: threadService_1.createMainContextProxyIdentifier('MainThreadMessageService', MainThreadMessageServiceShape),
    MainThreadOutputService: threadService_1.createMainContextProxyIdentifier('MainThreadOutputService', MainThreadOutputServiceShape),
    MainThreadQuickOpen: threadService_1.createMainContextProxyIdentifier('MainThreadQuickOpen', MainThreadQuickOpenShape),
    MainThreadStatusBar: threadService_1.createMainContextProxyIdentifier('MainThreadStatusBar', MainThreadStatusBarShape),
    MainThreadStorage: threadService_1.createMainContextProxyIdentifier('MainThreadStorage', MainThreadStorageShape),
    MainThreadTelemetry: threadService_1.createMainContextProxyIdentifier('MainThreadTelemetry', MainThreadTelemetryShape),
    MainThreadTerminalService: threadService_1.createMainContextProxyIdentifier('MainThreadTerminalService', MainThreadTerminalServiceShape),
    MainThreadWorkspace: threadService_1.createMainContextProxyIdentifier('MainThreadWorkspace', MainThreadWorkspaceShape),
    MainProcessExtensionService: threadService_1.createMainContextProxyIdentifier('MainProcessExtensionService', MainProcessExtensionServiceShape),
};
exports.ExtHostContext = {
    ExtHostCommands: threadService_1.createExtHostContextProxyIdentifier('ExtHostCommands', ExtHostCommandsShape),
    ExtHostConfiguration: threadService_1.createExtHostContextProxyIdentifier('ExtHostConfiguration', ExtHostConfigurationShape),
    ExtHostDiagnostics: threadService_1.createExtHostContextProxyIdentifier('ExtHostDiagnostics', ExtHostDiagnosticsShape),
    ExtHostDocuments: threadService_1.createExtHostContextProxyIdentifier('ExtHostDocuments', ExtHostDocumentsShape),
    ExtHostDocumentSaveParticipant: threadService_1.createExtHostContextProxyIdentifier('ExtHostDocumentSaveParticipant', ExtHostDocumentSaveParticipantShape),
    ExtHostEditors: threadService_1.createExtHostContextProxyIdentifier('ExtHostEditors', ExtHostEditorsShape),
    ExtHostExplorers: threadService_1.createExtHostContextProxyIdentifier('ExtHostExplorers', ExtHostTreeExplorersShape),
    ExtHostFileSystemEventService: threadService_1.createExtHostContextProxyIdentifier('ExtHostFileSystemEventService', ExtHostFileSystemEventServiceShape),
    ExtHostHeapService: threadService_1.createExtHostContextProxyIdentifier('ExtHostHeapMonitor', ExtHostHeapServiceShape),
    ExtHostLanguageFeatures: threadService_1.createExtHostContextProxyIdentifier('ExtHostLanguageFeatures', ExtHostLanguageFeaturesShape),
    ExtHostQuickOpen: threadService_1.createExtHostContextProxyIdentifier('ExtHostQuickOpen', ExtHostQuickOpenShape),
    ExtHostExtensionService: threadService_1.createExtHostContextProxyIdentifier('ExtHostExtensionService', ExtHostExtensionServiceShape),
    ExtHostTerminalService: threadService_1.createExtHostContextProxyIdentifier('ExtHostTerminalService', ExtHostTerminalServiceShape)
};
