/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var errors_1 = require("vs/base/common/errors");
var search_1 = require("vs/platform/search/common/search");
var workspace_1 = require("vs/platform/workspace/common/workspace");
var threadService_1 = require("vs/workbench/services/thread/common/threadService");
var editorService_1 = require("vs/workbench/services/editor/common/editorService");
var textfiles_1 = require("vs/workbench/services/textfile/common/textfiles");
var bulkEdit_1 = require("vs/editor/common/services/bulkEdit");
var winjs_base_1 = require("vs/base/common/winjs.base");
var extHost_protocol_1 = require("./extHost.protocol");
var resolverService_1 = require("vs/editor/common/services/resolverService");
var files_1 = require("vs/platform/files/common/files");
var objects_1 = require("vs/base/common/objects");
var MainThreadWorkspace = (function (_super) {
    __extends(MainThreadWorkspace, _super);
    function MainThreadWorkspace(searchService, contextService, threadService, textFileService, editorService, textModelResolverService, fileService) {
        var _this = _super.call(this) || this;
        _this._activeSearches = Object.create(null);
        _this._proxy = threadService.get(extHost_protocol_1.ExtHostContext.ExtHostWorkspace);
        contextService.onWorkspaceUpdated(function (workspace) { return _this._proxy.$onDidUpdateWorkspace(workspace); });
        _this._searchService = searchService;
        _this._contextService = contextService;
        _this._textFileService = textFileService;
        _this._contextService = contextService;
        _this._editorService = editorService;
        _this._fileService = fileService;
        _this._textModelResolverService = textModelResolverService;
        return _this;
    }
    MainThreadWorkspace.prototype.$startSearch = function (include, exclude, maxResults, requestId) {
        var _this = this;
        var workspace = this._contextService.getWorkspace();
        if (!workspace) {
            return undefined;
        }
        var search = this._searchService.search({
            folderResources: [workspace.resource],
            type: search_1.QueryType.File,
            maxResults: maxResults,
            includePattern: (_a = {}, _a[include] = true, _a),
            excludePattern: (_b = {}, _b[exclude] = true, _b),
        }).then(function (result) {
            return result.results.map(function (m) { return m.resource; });
        }, function (err) {
            if (!errors_1.isPromiseCanceledError(err)) {
                return winjs_base_1.TPromise.wrapError(err);
            }
            return undefined;
        });
        this._activeSearches[requestId] = search;
        var onDone = function () { return delete _this._activeSearches[requestId]; };
        search.done(onDone, onDone);
        return search;
        var _a, _b;
    };
    MainThreadWorkspace.prototype.$cancelSearch = function (requestId) {
        var search = this._activeSearches[requestId];
        if (search) {
            delete this._activeSearches[requestId];
            search.cancel();
            return winjs_base_1.TPromise.as(true);
        }
        return undefined;
    };
    MainThreadWorkspace.prototype.$saveAll = function (includeUntitled) {
        return this._textFileService.saveAll(includeUntitled).then(function (result) {
            return result.results.every(function (each) { return each.success === true; });
        });
    };
    MainThreadWorkspace.prototype.$applyWorkspaceEdit = function (edits) {
        var codeEditor;
        var editor = this._editorService.getActiveEditor();
        if (editor) {
            var candidate = editor.getControl();
            if (typeof candidate.getEditorType === 'function') {
                // enough proof
                codeEditor = candidate;
            }
        }
        return bulkEdit_1.bulkEdit(this._textModelResolverService, codeEditor, edits, this._fileService)
            .then(function () { return true; });
    };
    MainThreadWorkspace.prototype.$setWorkspace = function (resource, state) {
        this._contextService.setWorkspace(objects_1.assign({}, this._contextService.getWorkspace(), { resource: resource, revState: state }));
        return winjs_base_1.TPromise.as(void 0);
    };
    MainThreadWorkspace.prototype.$setWorkspaceState = function (workspace, state) {
        this._contextService.registerWorkspace({ resource: workspace, revState: state });
        return winjs_base_1.TPromise.as(void 0);
    };
    return MainThreadWorkspace;
}(extHost_protocol_1.MainThreadWorkspaceShape));
MainThreadWorkspace = __decorate([
    __param(0, search_1.ISearchService),
    __param(1, workspace_1.IWorkspaceContextService),
    __param(2, threadService_1.IThreadService),
    __param(3, textfiles_1.ITextFileService),
    __param(4, editorService_1.IWorkbenchEditorService),
    __param(5, resolverService_1.ITextModelResolverService),
    __param(6, files_1.IFileService)
], MainThreadWorkspace);
exports.MainThreadWorkspace = MainThreadWorkspace;
