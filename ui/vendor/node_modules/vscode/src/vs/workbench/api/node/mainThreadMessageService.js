/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var nls = require("vs/nls");
var message_1 = require("vs/platform/message/common/message");
var actions_1 = require("vs/base/common/actions");
var winjs_base_1 = require("vs/base/common/winjs.base");
var extHost_protocol_1 = require("./extHost.protocol");
var MainThreadMessageService = (function (_super) {
    __extends(MainThreadMessageService, _super);
    function MainThreadMessageService(messageService) {
        var _this = _super.call(this) || this;
        _this._messageService = messageService;
        return _this;
    }
    MainThreadMessageService.prototype.$showMessage = function (severity, message, commands) {
        var _this = this;
        return new winjs_base_1.TPromise(function (resolve) {
            var messageHide;
            var actions = [];
            var hasCloseAffordance = false;
            var MessageItemAction = (function (_super) {
                __extends(MessageItemAction, _super);
                function MessageItemAction(id, label, handle) {
                    return _super.call(this, id, label, undefined, true, function () {
                        resolve(handle);
                        messageHide(); // triggers dispose! make sure promise is already resolved
                        return undefined;
                    }) || this;
                }
                MessageItemAction.prototype.dispose = function () {
                    resolve(undefined);
                };
                return MessageItemAction;
            }(actions_1.Action));
            commands.forEach(function (command) {
                if (command.isCloseAffordance === true) {
                    hasCloseAffordance = true;
                }
                actions.push(new MessageItemAction('_extension_message_handle_' + command.handle, command.title, command.handle));
            });
            if (!hasCloseAffordance) {
                actions.push(new MessageItemAction('__close', nls.localize('close', "Close"), undefined));
            }
            messageHide = _this._messageService.show(severity, {
                message: message,
                actions: actions
            });
        });
    };
    return MainThreadMessageService;
}(extHost_protocol_1.MainThreadMessageServiceShape));
MainThreadMessageService = __decorate([
    __param(0, message_1.IMessageService)
], MainThreadMessageService);
exports.MainThreadMessageService = MainThreadMessageService;
