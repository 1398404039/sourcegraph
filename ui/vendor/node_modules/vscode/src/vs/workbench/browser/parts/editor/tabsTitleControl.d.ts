import './media/tabstitle.css';
import { IEditorGroup } from 'vs/workbench/common/editor';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { IWorkbenchEditorService } from 'vs/workbench/services/editor/common/editorService';
import { IContextMenuService } from 'vs/platform/contextview/browser/contextView';
import { IEditorGroupService } from 'vs/workbench/services/group/common/groupService';
import { IUntitledEditorService } from 'vs/workbench/services/untitled/common/untitledEditorService';
import { IMessageService } from 'vs/platform/message/common/message';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';
import { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';
import { IMenuService } from 'vs/platform/actions/common/actions';
import { IWindowService } from 'vs/platform/windows/common/windows';
import { TitleControl } from 'vs/workbench/browser/parts/editor/titleControl';
import { IQuickOpenService } from 'vs/workbench/services/quickopen/common/quickOpenService';
export declare class TabsTitleControl extends TitleControl {
    private untitledEditorService;
    private windowService;
    private titleContainer;
    private tabsContainer;
    private activeTab;
    private editorLabels;
    private scrollbar;
    private tabDisposeables;
    constructor(contextMenuService: IContextMenuService, instantiationService: IInstantiationService, configurationService: IConfigurationService, editorService: IWorkbenchEditorService, editorGroupService: IEditorGroupService, untitledEditorService: IUntitledEditorService, contextKeyService: IContextKeyService, keybindingService: IKeybindingService, telemetryService: ITelemetryService, messageService: IMessageService, menuService: IMenuService, quickOpenService: IQuickOpenService, windowService: IWindowService);
    setContext(group: IEditorGroup): void;
    create(parent: HTMLElement): void;
    allowDragging(element: HTMLElement): boolean;
    protected doUpdate(): void;
    private getUniqueTabLabels(editors);
    protected doRefresh(): void;
    private clearTabs();
    private refreshTabs(group);
    layout(): void;
    private hookTabListeners(tab, identifier);
    private onDrop(e, group, targetPosition, targetIndex);
    private handleExternalDrop(e, targetPosition, targetIndex);
    private isMoveOperation(e, source, target);
}
