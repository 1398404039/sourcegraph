/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var winjs_base_1 = require("vs/base/common/winjs.base");
var nls = require("vs/nls");
var platform_1 = require("vs/platform/platform");
var actions_1 = require("vs/base/common/actions");
var actions_2 = require("vs/platform/actions/common/actions");
var actionRegistry_1 = require("vs/workbench/common/actionRegistry");
var message_1 = require("vs/platform/message/common/message");
var configurationEditing_1 = require("vs/workbench/services/configuration/common/configurationEditing");
var partService_1 = require("vs/workbench/services/part/common/partService");
var ToggleActivityBarVisibilityAction = (function (_super) {
    __extends(ToggleActivityBarVisibilityAction, _super);
    function ToggleActivityBarVisibilityAction(id, label, partService, messageService, configurationEditingService) {
        var _this = _super.call(this, id, label) || this;
        _this.partService = partService;
        _this.messageService = messageService;
        _this.configurationEditingService = configurationEditingService;
        _this.enabled = !!_this.partService;
        return _this;
    }
    ToggleActivityBarVisibilityAction.prototype.run = function () {
        var _this = this;
        var visibility = this.partService.isVisible(partService_1.Parts.ACTIVITYBAR_PART);
        var newVisibilityValue = !visibility;
        this.configurationEditingService.writeConfiguration(configurationEditing_1.ConfigurationTarget.USER, { key: ToggleActivityBarVisibilityAction.activityBarVisibleKey, value: newVisibilityValue }).then(null, function (error) {
            _this.messageService.show(message_1.Severity.Error, error);
        });
        return winjs_base_1.TPromise.as(null);
    };
    return ToggleActivityBarVisibilityAction;
}(actions_1.Action));
ToggleActivityBarVisibilityAction.ID = 'workbench.action.toggleActivityBarVisibility';
ToggleActivityBarVisibilityAction.LABEL = nls.localize('toggleActivityBar', "Toggle Activity Bar Visibility");
ToggleActivityBarVisibilityAction.activityBarVisibleKey = 'workbench.activityBar.visible';
ToggleActivityBarVisibilityAction = __decorate([
    __param(2, partService_1.IPartService),
    __param(3, message_1.IMessageService),
    __param(4, configurationEditing_1.IConfigurationEditingService)
], ToggleActivityBarVisibilityAction);
exports.ToggleActivityBarVisibilityAction = ToggleActivityBarVisibilityAction;
var registry = platform_1.Registry.as(actionRegistry_1.Extensions.WorkbenchActions);
registry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(ToggleActivityBarVisibilityAction, ToggleActivityBarVisibilityAction.ID, ToggleActivityBarVisibilityAction.LABEL), 'View: Toggle Activity Bar Visibility', nls.localize('view', "View"));
