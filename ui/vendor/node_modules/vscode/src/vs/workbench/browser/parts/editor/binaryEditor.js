/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var nls = require("vs/nls");
var event_1 = require("vs/base/common/event");
var winjs_base_1 = require("vs/base/common/winjs.base");
var builder_1 = require("vs/base/browser/builder");
var resourceViewer_1 = require("vs/base/browser/ui/resourceviewer/resourceViewer");
var baseEditor_1 = require("vs/workbench/browser/parts/editor/baseEditor");
var binaryEditorModel_1 = require("vs/workbench/common/editor/binaryEditorModel");
var scrollableElement_1 = require("vs/base/browser/ui/scrollbar/scrollableElement");
var scrollable_1 = require("vs/base/common/scrollable");
/*
 * This class is only intended to be subclassed and not instantiated.
 */
var BaseBinaryResourceEditor = (function (_super) {
    __extends(BaseBinaryResourceEditor, _super);
    function BaseBinaryResourceEditor(id, telemetryService) {
        var _this = _super.call(this, id, telemetryService) || this;
        _this._onMetadataChanged = new event_1.Emitter();
        return _this;
    }
    Object.defineProperty(BaseBinaryResourceEditor.prototype, "onMetadataChanged", {
        get: function () {
            return this._onMetadataChanged.event;
        },
        enumerable: true,
        configurable: true
    });
    BaseBinaryResourceEditor.prototype.getTitle = function () {
        return this.input ? this.input.getName() : nls.localize('binaryEditor', "Binary Viewer");
    };
    BaseBinaryResourceEditor.prototype.createEditor = function (parent) {
        // Container for Binary
        var binaryContainerElement = document.createElement('div');
        binaryContainerElement.className = 'binary-container';
        this.binaryContainer = builder_1.$(binaryContainerElement);
        this.binaryContainer.tabindex(0); // enable focus support from the editor part (do not remove)
        // Custom Scrollbars
        this.scrollbar = new scrollableElement_1.DomScrollableElement(binaryContainerElement, { canUseTranslate3d: false, horizontal: scrollable_1.ScrollbarVisibility.Auto, vertical: scrollable_1.ScrollbarVisibility.Auto });
        parent.getHTMLElement().appendChild(this.scrollbar.getDomNode());
    };
    BaseBinaryResourceEditor.prototype.setInput = function (input, options) {
        var _this = this;
        var oldInput = this.input;
        _super.prototype.setInput.call(this, input, options);
        // Detect options
        var forceOpen = options && options.forceOpen;
        // Same Input
        if (!forceOpen && input.matches(oldInput)) {
            return winjs_base_1.TPromise.as(null);
        }
        // Different Input (Reload)
        return input.resolve(true).then(function (resolvedModel) {
            // Assert Model instance
            if (!(resolvedModel instanceof binaryEditorModel_1.BinaryEditorModel)) {
                return winjs_base_1.TPromise.wrapError('Invalid editor input. Binary resource editor requires a model instance of BinaryEditorModel.');
            }
            // Assert that the current input is still the one we expect. This prevents a race condition when loading takes long and another input was set meanwhile
            if (!_this.input || _this.input !== input) {
                return null;
            }
            // Render Input
            var model = resolvedModel;
            resourceViewer_1.ResourceViewer.show({ name: model.getName(), resource: model.getResource(), size: model.getSize(), etag: model.getETag() }, _this.binaryContainer, _this.scrollbar, function (meta) { return _this.handleMetadataChanged(meta); });
            return winjs_base_1.TPromise.as(null);
        });
    };
    BaseBinaryResourceEditor.prototype.handleMetadataChanged = function (meta) {
        this.metadata = meta;
        this._onMetadataChanged.fire();
    };
    BaseBinaryResourceEditor.prototype.getMetadata = function () {
        return this.metadata;
    };
    BaseBinaryResourceEditor.prototype.clearInput = function () {
        // Clear Meta
        this.handleMetadataChanged(null);
        // Empty HTML Container
        builder_1.$(this.binaryContainer).empty();
        _super.prototype.clearInput.call(this);
    };
    BaseBinaryResourceEditor.prototype.layout = function (dimension) {
        // Pass on to Binary Container
        this.binaryContainer.size(dimension.width, dimension.height);
        this.scrollbar.scanDomNode();
    };
    BaseBinaryResourceEditor.prototype.focus = function () {
        this.binaryContainer.domFocus();
    };
    BaseBinaryResourceEditor.prototype.dispose = function () {
        // Destroy Container
        this.binaryContainer.destroy();
        this.scrollbar.dispose();
        _super.prototype.dispose.call(this);
    };
    return BaseBinaryResourceEditor;
}(baseEditor_1.BaseEditor));
exports.BaseBinaryResourceEditor = BaseBinaryResourceEditor;
