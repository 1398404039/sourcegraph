/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
"use strict";
var uri_1 = require("vs/base/common/uri");
var debug_1 = require("vs/workbench/parts/debug/common/debug");
var Source = (function () {
    function Source(raw, deemphasize) {
        this.raw = raw;
        this.deemphasize = deemphasize;
        var path = raw.path || raw.name;
        this.uri = raw.sourceReference > 0 ? uri_1.default.parse(debug_1.DEBUG_SCHEME + ":" + path) : uri_1.default.file(path);
    }
    Object.defineProperty(Source.prototype, "name", {
        get: function () {
            return this.raw.name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Source.prototype, "origin", {
        get: function () {
            return this.raw.origin;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Source.prototype, "reference", {
        get: function () {
            return this.raw.sourceReference;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Source.prototype, "inMemory", {
        get: function () {
            return this.uri.toString().indexOf(debug_1.DEBUG_SCHEME + ":") === 0;
        },
        enumerable: true,
        configurable: true
    });
    return Source;
}());
exports.Source = Source;
