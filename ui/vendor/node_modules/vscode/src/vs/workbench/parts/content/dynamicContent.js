/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var partService_1 = require("vs/workbench/services/part/common/partService");
var instantiation_1 = require("vs/platform/instantiation/common/instantiation");
var editorService_1 = require("vs/workbench/services/editor/common/editorService");
var errors_1 = require("vs/base/common/errors");
var winjs_base_1 = require("vs/base/common/winjs.base");
var configuration_1 = require("vs/platform/configuration/common/configuration");
var telemetry_1 = require("vs/platform/telemetry/common/telemetry");
var backup_1 = require("vs/workbench/services/backup/common/backup");
var dynamicOverlay_1 = require("vs/workbench/parts/content/overlay/dynamicOverlay");
var builder_1 = require("vs/base/browser/builder");
var DynamicContentContribution = (function () {
    function DynamicContentContribution(partService, instantiationService, configurationService, editorService, backupFileService, telemetryService) {
        var _this = this;
        winjs_base_1.TPromise.join([
            backupFileService.hasBackups(),
            partService.joinCreation()
        ]).then(function (_a) {
            var hasBackups = _a[0];
            var activeInput = editorService.getActiveEditorInput();
            if (!activeInput && !hasBackups) {
                console.log("creating the dynamic overlay!");
                var overlay = instantiationService.createInstance(dynamicOverlay_1.DynamicOverlay);
                _this._overlay = builder_1.$('h2.title').text('Making dynamic components is awesome!');
                overlay.create(_this._overlay);
                overlay.show();
            }
        }).then(null, errors_1.onUnexpectedError);
    }
    DynamicContentContribution.prototype.getId = function () {
        return 'vs.dynamicContentPage';
    };
    return DynamicContentContribution;
}());
DynamicContentContribution = __decorate([
    __param(0, partService_1.IPartService),
    __param(1, instantiation_1.IInstantiationService),
    __param(2, configuration_1.IConfigurationService),
    __param(3, editorService_1.IWorkbenchEditorService),
    __param(4, backup_1.IBackupFileService),
    __param(5, telemetry_1.ITelemetryService)
], DynamicContentContribution);
exports.DynamicContentContribution = DynamicContentContribution;
