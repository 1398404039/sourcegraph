/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
"use strict";
var messages_1 = require("vs/workbench/parts/markers/common/messages");
var constants_1 = require("vs/workbench/parts/markers/common/constants");
var platform_1 = require("vs/platform/platform");
var actions_1 = require("vs/platform/actions/common/actions");
var actionRegistry_1 = require("vs/workbench/common/actionRegistry");
var panel_1 = require("vs/workbench/browser/panel");
var configurationRegistry_1 = require("vs/platform/configuration/common/configurationRegistry");
var markersPanelActions_1 = require("vs/workbench/parts/markers/browser/markersPanelActions");
function registerContributions() {
    // configuration
    platform_1.Registry.as(configurationRegistry_1.Extensions.Configuration).registerConfiguration({
        'id': 'problems',
        'order': 101,
        'title': messages_1.default.PROBLEMS_PANEL_CONFIGURATION_TITLE,
        'type': 'object',
        'properties': {
            'problems.autoReveal': {
                'description': messages_1.default.PROBLEMS_PANEL_CONFIGURATION_AUTO_REVEAL,
                'type': 'boolean',
                'default': true
            }
        }
    });
    // markers panel
    platform_1.Registry.as(panel_1.Extensions.Panels).registerPanel(new panel_1.PanelDescriptor('vs/workbench/parts/markers/browser/markersPanel', 'MarkersPanel', constants_1.default.MARKERS_PANEL_ID, messages_1.default.MARKERS_PANEL_TITLE_PROBLEMS, 'markersPanel', 10, markersPanelActions_1.ToggleMarkersPanelAction.ID));
    // actions
    var registry = platform_1.Registry.as(actionRegistry_1.Extensions.WorkbenchActions);
    registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(markersPanelActions_1.ToggleMarkersPanelAction, markersPanelActions_1.ToggleMarkersPanelAction.ID, markersPanelActions_1.ToggleMarkersPanelAction.LABEL, {
        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 43 /* KEY_M */
    }), 'View: Show Problems', messages_1.default.MARKERS_PANEL_VIEW_CATEGORY);
    // Retaining old action to show errors and warnings, so that custom bindings to this action for existing users works.
    registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(markersPanelActions_1.ToggleErrorsAndWarningsAction, markersPanelActions_1.ToggleErrorsAndWarningsAction.ID, markersPanelActions_1.ToggleErrorsAndWarningsAction.LABEL), 'Show Errors and Warnings');
}
exports.registerContributions = registerContributions;
