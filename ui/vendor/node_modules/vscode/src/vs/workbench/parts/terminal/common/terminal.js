/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var platform = require("vs/base/common/platform");
var contextkey_1 = require("vs/platform/contextkey/common/contextkey");
var instantiation_1 = require("vs/platform/instantiation/common/instantiation");
exports.TERMINAL_PANEL_ID = 'workbench.panel.terminal';
exports.TERMINAL_SERVICE_ID = 'terminalService';
exports.TERMINAL_DEFAULT_RIGHT_CLICK_COPY_PASTE = platform.isWindows;
/**  A context key that is set when the integrated terminal has focus. */
exports.KEYBINDING_CONTEXT_TERMINAL_FOCUS = new contextkey_1.RawContextKey('terminalFocus', undefined);
/**  A context key that is set when the integrated terminal does not have focus. */
exports.KEYBINDING_CONTEXT_TERMINAL_NOT_FOCUSED = exports.KEYBINDING_CONTEXT_TERMINAL_FOCUS.toNegated();
/** A keybinding context key that is set when the integrated terminal has text selected. */
exports.KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED = new contextkey_1.RawContextKey('terminalTextSelected', undefined);
/** A keybinding context key that is set when the integrated terminal does not have text selected. */
exports.KEYBINDING_CONTEXT_TERMINAL_TEXT_NOT_SELECTED = exports.KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED.toNegated();
exports.ITerminalService = instantiation_1.createDecorator(exports.TERMINAL_SERVICE_ID);
exports.TerminalCursorStyle = {
    BLOCK: 'block',
    LINE: 'line',
    UNDERLINE: 'underline'
};
