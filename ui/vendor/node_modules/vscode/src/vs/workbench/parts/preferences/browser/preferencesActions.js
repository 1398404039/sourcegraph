/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var winjs_base_1 = require("vs/base/common/winjs.base");
var nls = require("vs/nls");
var actions_1 = require("vs/base/common/actions");
var preferences_1 = require("vs/workbench/parts/preferences/common/preferences");
var editorService_1 = require("vs/workbench/services/editor/common/editorService");
var sideBySideEditor_1 = require("vs/workbench/browser/parts/editor/sideBySideEditor");
var preferencesEditor_1 = require("vs/workbench/parts/preferences/browser/preferencesEditor");
var OpenGlobalSettingsAction = (function (_super) {
    __extends(OpenGlobalSettingsAction, _super);
    function OpenGlobalSettingsAction(id, label, preferencesService) {
        var _this = _super.call(this, id, label) || this;
        _this.preferencesService = preferencesService;
        return _this;
    }
    OpenGlobalSettingsAction.prototype.run = function (event) {
        return this.preferencesService.openGlobalSettings();
    };
    return OpenGlobalSettingsAction;
}(actions_1.Action));
OpenGlobalSettingsAction.ID = 'workbench.action.openGlobalSettings';
OpenGlobalSettingsAction.LABEL = nls.localize('openGlobalSettings', "Open User Settings");
OpenGlobalSettingsAction = __decorate([
    __param(2, preferences_1.IPreferencesService)
], OpenGlobalSettingsAction);
exports.OpenGlobalSettingsAction = OpenGlobalSettingsAction;
var OpenGlobalKeybindingsAction = (function (_super) {
    __extends(OpenGlobalKeybindingsAction, _super);
    function OpenGlobalKeybindingsAction(id, label, preferencesService) {
        var _this = _super.call(this, id, label) || this;
        _this.preferencesService = preferencesService;
        return _this;
    }
    OpenGlobalKeybindingsAction.prototype.run = function (event) {
        return this.preferencesService.openGlobalKeybindingSettings();
    };
    return OpenGlobalKeybindingsAction;
}(actions_1.Action));
OpenGlobalKeybindingsAction.ID = 'workbench.action.openGlobalKeybindings';
OpenGlobalKeybindingsAction.LABEL = nls.localize('openGlobalKeybindings', "Open Keyboard Shortcuts");
OpenGlobalKeybindingsAction = __decorate([
    __param(2, preferences_1.IPreferencesService)
], OpenGlobalKeybindingsAction);
exports.OpenGlobalKeybindingsAction = OpenGlobalKeybindingsAction;
var OpenWorkspaceSettingsAction = (function (_super) {
    __extends(OpenWorkspaceSettingsAction, _super);
    function OpenWorkspaceSettingsAction(id, label, preferencesService) {
        var _this = _super.call(this, id, label) || this;
        _this.preferencesService = preferencesService;
        return _this;
    }
    OpenWorkspaceSettingsAction.prototype.run = function (event) {
        return this.preferencesService.openWorkspaceSettings();
    };
    return OpenWorkspaceSettingsAction;
}(actions_1.Action));
OpenWorkspaceSettingsAction.ID = 'workbench.action.openWorkspaceSettings';
OpenWorkspaceSettingsAction.LABEL = nls.localize('openWorkspaceSettings', "Open Workspace Settings");
OpenWorkspaceSettingsAction = __decorate([
    __param(2, preferences_1.IPreferencesService)
], OpenWorkspaceSettingsAction);
exports.OpenWorkspaceSettingsAction = OpenWorkspaceSettingsAction;
var StartSearchDefaultSettingsAction = (function (_super) {
    __extends(StartSearchDefaultSettingsAction, _super);
    function StartSearchDefaultSettingsAction(id, label, workbenchEditorService) {
        var _this = _super.call(this, id, label) || this;
        _this.workbenchEditorService = workbenchEditorService;
        return _this;
    }
    Object.defineProperty(StartSearchDefaultSettingsAction.prototype, "enabled", {
        get: function () {
            return this.getDefaultPreferencesEditor() !== null;
        },
        enumerable: true,
        configurable: true
    });
    StartSearchDefaultSettingsAction.prototype.run = function (event) {
        var defaultPreferencesEditor = this.getDefaultPreferencesEditor();
        if (defaultPreferencesEditor) {
            defaultPreferencesEditor.focus();
        }
        return winjs_base_1.TPromise.as(null);
    };
    StartSearchDefaultSettingsAction.prototype.getDefaultPreferencesEditor = function () {
        var activeEditor = this.workbenchEditorService.getActiveEditor();
        if (activeEditor instanceof sideBySideEditor_1.SideBySideEditor) {
            var detailsEditor = activeEditor.getDetailsEditor();
            if (detailsEditor instanceof preferencesEditor_1.DefaultPreferencesEditor) {
                return detailsEditor;
            }
        }
        return null;
    };
    return StartSearchDefaultSettingsAction;
}(actions_1.Action));
StartSearchDefaultSettingsAction.ID = 'defaultSettings.action.focusSearch';
StartSearchDefaultSettingsAction.LABEL = nls.localize('startSearchDefaultSettings', "Focus Default Settings Search");
StartSearchDefaultSettingsAction = __decorate([
    __param(2, editorService_1.IWorkbenchEditorService)
], StartSearchDefaultSettingsAction);
exports.StartSearchDefaultSettingsAction = StartSearchDefaultSettingsAction;
