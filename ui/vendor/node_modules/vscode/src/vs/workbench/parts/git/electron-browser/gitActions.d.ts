import { TPromise } from 'vs/base/common/winjs.base';
import { Action } from 'vs/base/common/actions';
import { IMessageService } from 'vs/platform/message/common/message';
import { IWindowsService } from 'vs/platform/windows/common/windows';
import { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';
import { IGitService } from 'vs/workbench/parts/git/common/git';
import { IQuickOpenService } from 'vs/platform/quickOpen/common/quickOpen';
import { ITelemetryService, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';
export declare class CloneAction extends Action {
    private gitService;
    private quickOpenService;
    private messageService;
    private windowsService;
    private telemetryService;
    private workspaceService;
    static ID: string;
    static LABEL: string;
    constructor(id: string, label: string, gitService: IGitService, quickOpenService: IQuickOpenService, messageService: IMessageService, windowsService: IWindowsService, telemetryService: ITelemetryService, workspaceService: IWorkspaceContextService);
    run(event?: any, data?: ITelemetryData): TPromise<void>;
}
