/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var event_1 = require("vs/base/common/event");
var nls_1 = require("vs/nls");
var winjs_base_1 = require("vs/base/common/winjs.base");
var message_1 = require("vs/platform/message/common/message");
var TreeExplorerService = (function () {
    function TreeExplorerService(messageService) {
        this.messageService = messageService;
        this._onTreeExplorerNodeProviderRegistered = new event_1.Emitter();
        this._treeExplorerNodeProviders = Object.create(null);
    }
    Object.defineProperty(TreeExplorerService.prototype, "onTreeExplorerNodeProviderRegistered", {
        get: function () { return this._onTreeExplorerNodeProviderRegistered.event; },
        enumerable: true,
        configurable: true
    });
    ;
    TreeExplorerService.prototype.registerTreeExplorerNodeProvider = function (providerId, provider) {
        this._treeExplorerNodeProviders[providerId] = provider;
        this._onTreeExplorerNodeProviderRegistered.fire(providerId);
    };
    TreeExplorerService.prototype.hasProvider = function (providerId) {
        return !!this._treeExplorerNodeProviders[providerId];
    };
    TreeExplorerService.prototype.provideRootNode = function (providerId) {
        var provider = this.getProvider(providerId);
        return winjs_base_1.TPromise.wrap(provider.provideRootNode());
    };
    TreeExplorerService.prototype.resolveChildren = function (providerId, node) {
        var provider = this.getProvider(providerId);
        return winjs_base_1.TPromise.wrap(provider.resolveChildren(node));
    };
    TreeExplorerService.prototype.executeCommand = function (providerId, node) {
        var provider = this.getProvider(providerId);
        return winjs_base_1.TPromise.wrap(provider.executeCommand(node));
    };
    TreeExplorerService.prototype.getProvider = function (providerId) {
        var provider = this._treeExplorerNodeProviders[providerId];
        if (!provider) {
            this.messageService.show(message_1.Severity.Error, nls_1.localize('treeExplorer.noMatchingProviderId', 'No TreeExplorerNodeProvider with id {providerId} registered.'));
        }
        return provider;
    };
    return TreeExplorerService;
}());
TreeExplorerService = __decorate([
    __param(0, message_1.IMessageService)
], TreeExplorerService);
exports.TreeExplorerService = TreeExplorerService;
