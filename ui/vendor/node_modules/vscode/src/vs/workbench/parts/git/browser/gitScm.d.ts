import { TPromise } from 'vs/base/common/winjs.base';
import Event from 'vs/base/common/event';
import URI from 'vs/base/common/uri';
import { IModel } from 'vs/editor/common/editorCommon';
import { ISCMService, ISCMProvider, ISCMResource, ISCMResourceGroup } from 'vs/workbench/services/scm/common/scm';
import { ITextModelResolverService, ITextModelContentProvider } from 'vs/editor/common/services/resolverService';
import { IModelService } from 'vs/editor/common/services/modelService';
import { IGitService } from 'vs/workbench/parts/git/common/git';
import { IWorkbenchContribution } from 'vs/workbench/common/contributions';
export declare class GitSCMProvider implements IWorkbenchContribution, ISCMProvider, ITextModelContentProvider {
    private modelService;
    private gitService;
    readonly id: string;
    readonly label: string;
    readonly resources: any[];
    private _onDidChange;
    readonly onDidChange: Event<ISCMResourceGroup[]>;
    constructor(textModelResolverService: ITextModelResolverService, modelService: IModelService, gitService: IGitService, scmService: ISCMService);
    getId(): string;
    open(uri: ISCMResource): TPromise<void>;
    acceptChanges(): TPromise<void>;
    drag(from: ISCMResource, to: ISCMResourceGroup): TPromise<void>;
    getOriginalResource(uri: URI): TPromise<URI>;
    provideTextContent(uri: URI): TPromise<IModel>;
    dispose(): void;
}
