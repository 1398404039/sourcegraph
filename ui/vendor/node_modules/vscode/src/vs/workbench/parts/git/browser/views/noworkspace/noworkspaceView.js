/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
require("./noworkspaceView.css");
var nls = require("vs/nls");
var errors = require("vs/base/common/errors");
var winjs = require("vs/base/common/winjs.base");
var ee = require("vs/base/common/eventEmitter");
var env = require("vs/base/common/platform");
var builder = require("vs/base/browser/builder");
var button_1 = require("vs/base/browser/ui/button/button");
var instantiation_1 = require("vs/platform/instantiation/common/instantiation");
var fileActions_1 = require("vs/workbench/browser/actions/fileActions");
var $ = builder.$;
var NoWorkspaceView = (function (_super) {
    __extends(NoWorkspaceView, _super);
    function NoWorkspaceView(actionRunner, instantiationService) {
        var _this = _super.call(this) || this;
        _this.actionRunner = actionRunner;
        _this.instantiationService = instantiationService;
        _this.ID = 'noworkspace';
        return _this;
    }
    Object.defineProperty(NoWorkspaceView.prototype, "element", {
        get: function () {
            if (!this._element) {
                this.render();
            }
            return this._element;
        },
        enumerable: true,
        configurable: true
    });
    NoWorkspaceView.prototype.render = function () {
        var _this = this;
        this._element = $([
            '<div class="noworkspace-view">',
            '<p>', nls.localize('noWorkspaceHelp', "You have not yet opened a folder."), '</p>',
            '<p>', nls.localize('pleaseRestart', "Open a folder with a Git repository in order to access Git features."), '</p>',
            '</div>'
        ].join('')).getHTMLElement();
        this._openFolderButton = new button_1.Button(this._element);
        this._openFolderButton.label = nls.localize('openFolder', "Open Folder");
        this._openFolderButton.addListener2('click', function () {
            var actionClass = env.isMacintosh ? fileActions_1.OpenFileFolderAction : fileActions_1.OpenFolderAction;
            var action = _this.instantiationService.createInstance(actionClass, actionClass.ID, actionClass.LABEL);
            _this.actionRunner.run(action).done(function () {
                action.dispose();
            }, function (err) {
                action.dispose();
                errors.onUnexpectedError(err);
            });
        });
    };
    NoWorkspaceView.prototype.focus = function () {
        if (this._openFolderButton) {
            this._openFolderButton.getElement().focus();
        }
    };
    NoWorkspaceView.prototype.layout = function (dimension) {
        return;
    };
    NoWorkspaceView.prototype.setVisible = function (visible) {
        return winjs.TPromise.as(null);
    };
    NoWorkspaceView.prototype.getControl = function () {
        return null;
    };
    NoWorkspaceView.prototype.getActions = function () {
        return [];
    };
    NoWorkspaceView.prototype.getSecondaryActions = function () {
        return [];
    };
    return NoWorkspaceView;
}(ee.EventEmitter));
NoWorkspaceView = __decorate([
    __param(1, instantiation_1.IInstantiationService)
], NoWorkspaceView);
exports.NoWorkspaceView = NoWorkspaceView;
