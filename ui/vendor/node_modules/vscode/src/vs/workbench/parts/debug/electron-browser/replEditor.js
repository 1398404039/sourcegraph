/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var editorCommonExtensions_1 = require("vs/editor/common/editorCommonExtensions");
var codeEditorService_1 = require("vs/editor/common/services/codeEditorService");
var codeEditorWidget_1 = require("vs/editor/browser/widget/codeEditorWidget");
var contextkey_1 = require("vs/platform/contextkey/common/contextkey");
var instantiation_1 = require("vs/platform/instantiation/common/instantiation");
var commands_1 = require("vs/platform/commands/common/commands");
// Allowed Editor Contributions:
var menuPreventer_1 = require("vs/editor/contrib/multicursor/browser/menuPreventer");
var selectionClipboard_1 = require("vs/editor/contrib/selectionClipboard/electron-browser/selectionClipboard");
var contextmenu_1 = require("vs/editor/contrib/contextmenu/browser/contextmenu");
var suggestController_1 = require("vs/editor/contrib/suggest/browser/suggestController");
var snippetController_1 = require("vs/editor/contrib/snippet/common/snippetController");
var tabCompletion_1 = require("vs/workbench/parts/snippets/electron-browser/tabCompletion");
var ReplInputEditor = (function (_super) {
    __extends(ReplInputEditor, _super);
    function ReplInputEditor(domElement, options, instantiationService, codeEditorService, commandService, contextKeyService) {
        return _super.call(this, domElement, options, instantiationService, codeEditorService, commandService, contextKeyService) || this;
    }
    ReplInputEditor.prototype._getContributions = function () {
        return [
            menuPreventer_1.MenuPreventer,
            selectionClipboard_1.SelectionClipboard,
            contextmenu_1.ContextMenuController,
            suggestController_1.SuggestController,
            snippetController_1.SnippetController,
            tabCompletion_1.TabCompletionController,
        ];
    };
    ReplInputEditor.prototype._getActions = function () {
        return editorCommonExtensions_1.CommonEditorRegistry.getEditorActions();
    };
    return ReplInputEditor;
}(codeEditorWidget_1.CodeEditorWidget));
ReplInputEditor = __decorate([
    __param(2, instantiation_1.IInstantiationService),
    __param(3, codeEditorService_1.ICodeEditorService),
    __param(4, commands_1.ICommandService),
    __param(5, contextkey_1.IContextKeyService)
], ReplInputEditor);
exports.ReplInputEditor = ReplInputEditor;
