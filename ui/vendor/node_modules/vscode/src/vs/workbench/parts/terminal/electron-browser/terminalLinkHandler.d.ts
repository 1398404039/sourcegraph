import { IWorkbenchEditorService } from 'vs/workbench/services/editor/common/editorService';
import { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';
import { Platform } from 'vs/base/common/platform';
export declare type XtermLinkMatcherHandler = (event: MouseEvent, uri: string) => boolean | void;
export declare type XtermLinkMatcherValidationCallback = (uri: string, callback: (isValid: boolean) => void) => void;
export declare class TerminalLinkHandler {
    private _platform;
    private _editorService;
    private _contextService;
    constructor(_platform: Platform, _editorService: IWorkbenchEditorService, _contextService: IWorkspaceContextService);
    initialize(xterm: any): void;
    registerCustomLinkHandler(xterm: any, regex: RegExp, handler: (uri: string) => void, matchIndex?: number, validationCallback?: XtermLinkMatcherValidationCallback): number;
    registerLocalLinkHandler(xterm: any): number;
    private _wrapLinkHandler(handler);
    protected readonly _localLinkRegex: RegExp;
    private _handleLocalLink(link);
    private _validateLocalLink(link, callback);
    private _resolvePath(link);
}
