import Event from 'vs/base/common/event';
import { TPromise } from 'vs/base/common/winjs.base';
import { IMessageService } from 'vs/platform/message/common/message';
import { InternalTreeExplorerNode, InternalTreeExplorerNodeProvider } from 'vs/workbench/parts/explorers/common/treeExplorerViewModel';
import { ITreeExplorerService } from 'vs/workbench/parts/explorers/common/treeExplorerService';
export declare class TreeExplorerService implements ITreeExplorerService {
    private messageService;
    _serviceBrand: any;
    private _onTreeExplorerNodeProviderRegistered;
    readonly onTreeExplorerNodeProviderRegistered: Event<string>;
    private _treeExplorerNodeProviders;
    constructor(messageService: IMessageService);
    registerTreeExplorerNodeProvider(providerId: string, provider: InternalTreeExplorerNodeProvider): void;
    hasProvider(providerId: string): boolean;
    provideRootNode(providerId: string): TPromise<InternalTreeExplorerNode>;
    resolveChildren(providerId: string, node: InternalTreeExplorerNode): TPromise<InternalTreeExplorerNode[]>;
    executeCommand(providerId: string, node: InternalTreeExplorerNode): TPromise<any>;
    private getProvider(providerId);
}
