/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
require('./watermark.css');
var builder_1 = require('vs/base/browser/builder');
var nls = require('vs/nls');
var entries = [
    {
        text: nls.localize('watermark.showCommands', "Command Palette"),
        ids: ['workbench.action.showCommands']
    },
    {
        text: nls.localize('watermark.quickOpen', "Go to File"),
        ids: ['workbench.action.quickOpen']
    },
    {
        text: nls.localize('watermark.moveLines', "Move Lines Up/Down"),
        ids: ['editor.action.moveLinesUpAction', 'editor.action.moveLinesDownAction']
    },
    {
        text: nls.localize('watermark.addCursor', "Add Cursors Above/Below"),
        ids: ['editor.action.insertCursorAbove', 'editor.action.insertCursorBelow']
    },
    {
        text: nls.localize('watermark.toggleTerminal', "Toggle Terminal"),
        ids: ['workbench.action.terminal.toggleTerminal']
    },
];
var UNBOUND = nls.localize('watermark.unboundCommand', "unbound");
function create(container, keybindingService) {
    var watermark = builder_1.$(container)
        .addClass('has-watermark')
        .div({ 'class': 'watermark' });
    var box = builder_1.$(watermark)
        .div({ 'class': 'watermark-box' });
    function update() {
        var builder = builder_1.$(box);
        builder.clearChildren();
        entries.map(function (entry) {
            builder.element('dl', {}, function (dl) {
                dl.element('dt', {}, function (dt) { return dt.text(entry.text); });
                dl.element('dd', {}, function (dd) { return dd.innerHtml(entry.ids
                    .map(function (id) { return keybindingService.lookupKeybindings(id).slice(0, 1)
                    .map(function (k) { return ("<span class=\"shortcuts\">" + keybindingService.getLabelFor(k) + "</span>"); })
                    .join('') || UNBOUND; })
                    .join(' / ')); });
            });
        });
    }
    update();
    return keybindingService.onDidUpdateKeybindings(update);
}
exports.create = create;
