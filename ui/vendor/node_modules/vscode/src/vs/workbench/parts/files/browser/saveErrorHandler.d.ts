import { TPromise } from 'vs/base/common/winjs.base';
import URI from 'vs/base/common/uri';
import { EditorInputAction } from 'vs/workbench/browser/parts/editor/baseEditor';
import { IWorkbenchEditorService } from 'vs/workbench/services/editor/common/editorService';
import { ITextFileService, ISaveErrorHandler, ITextFileEditorModel } from 'vs/workbench/services/textfile/common/textfiles';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { IMessageService } from 'vs/platform/message/common/message';
import { IModeService } from 'vs/editor/common/services/modeService';
import { IModelService } from 'vs/editor/common/services/modelService';
import { IWorkbenchContribution } from 'vs/workbench/common/contributions';
import { ITextModelResolverService, ITextModelContentProvider } from 'vs/editor/common/services/resolverService';
import { IModel } from 'vs/editor/common/editorCommon';
export declare const CONFLICT_RESOLUTION_SCHEME = "conflictResolution";
export declare class SaveErrorHandler implements ISaveErrorHandler, IWorkbenchContribution, ITextModelContentProvider {
    private messageService;
    private textFileService;
    private textModelResolverService;
    private modelService;
    private modeService;
    private instantiationService;
    private messages;
    private toUnbind;
    constructor(messageService: IMessageService, textFileService: ITextFileService, textModelResolverService: ITextModelResolverService, modelService: IModelService, modeService: IModeService, instantiationService: IInstantiationService);
    provideTextContent(resource: URI): TPromise<IModel>;
    getId(): string;
    private registerListeners();
    private onFileSavedOrReverted(resource);
    onSaveError(error: any, model: ITextFileEditorModel): void;
    dispose(): void;
}
export declare class AcceptLocalChangesAction extends EditorInputAction {
    private editorService;
    private resolverService;
    constructor(editorService: IWorkbenchEditorService, resolverService: ITextModelResolverService);
    run(): TPromise<void>;
}
export declare class RevertLocalChangesAction extends EditorInputAction {
    private editorService;
    private resolverService;
    constructor(editorService: IWorkbenchEditorService, resolverService: ITextModelResolverService);
    run(): TPromise<void>;
}
