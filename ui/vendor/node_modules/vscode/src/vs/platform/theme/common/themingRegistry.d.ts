import { IJSONSchema } from 'vs/base/common/jsonSchema';
import { Color } from 'vs/base/common/color';
import { ITheme } from 'vs/platform/theme/common/themeService';
export declare const Extensions: {
    ThemingContribution: string;
};
export interface IColorContribution {
    readonly id: string;
    readonly description: string;
    readonly defaults: ColorDefaults;
}
export interface DerivedColor {
    (theme: ITheme): Color;
}
export interface ColorDefaults {
    light: ColorDescription;
    dark: ColorDescription;
    hc: ColorDescription;
}
export declare type ColorDescription = string | IColorContribution | DerivedColor;
export interface IThemingRegistry {
    /**
     * Register a color to the registry.
     */
    registerColor(id: string, description: string, defaults?: ColorDefaults): IColorContribution;
    /**
     * Get all color contributions
     */
    getColors(): IColorContribution[];
    /**
     * Gets the color of the given id
     */
    getColor(id: string): IColorContribution;
    /**
     * JSON schema of all colors
     */
    getColorSchema(): IJSONSchema;
}
export declare function darken(colorDesc: ColorDescription, factor: number): DerivedColor;
