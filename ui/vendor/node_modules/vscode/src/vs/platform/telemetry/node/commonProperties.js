/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
"use strict";
var Platform = require("vs/base/common/platform");
var os = require("os");
var winjs_base_1 = require("vs/base/common/winjs.base");
var uuid = require("vs/base/common/uuid");
exports.machineIdStorageKey = 'telemetry.machineId';
exports.machineIdIpcChannel = 'vscode:machineId';
function resolveCommonProperties(commit, version) {
    var result = Object.create(null);
    result['sessionID'] = uuid.generateUuid() + Date.now();
    result['commitHash'] = commit;
    result['version'] = version;
    result['common.osVersion'] = os.release();
    result['common.platform'] = Platform.Platform[Platform.platform];
    // dynamic properties which value differs on each call
    var seq = 0;
    var startTime = Date.now();
    Object.defineProperties(result, {
        'timestamp': {
            get: function () { return new Date(); },
            enumerable: true
        },
        'common.timesincesessionstart': {
            get: function () { return Date.now() - startTime; },
            enumerable: true
        },
        'common.sequence': {
            get: function () { return seq++; },
            enumerable: true
        }
    });
    return winjs_base_1.TPromise.as(result);
}
exports.resolveCommonProperties = resolveCommonProperties;
