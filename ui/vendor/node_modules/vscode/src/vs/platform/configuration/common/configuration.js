/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
"use strict";
var instantiation_1 = require("vs/platform/instantiation/common/instantiation");
exports.IConfigurationService = instantiation_1.createDecorator('configurationService');
var ConfigurationSource;
(function (ConfigurationSource) {
    ConfigurationSource[ConfigurationSource["Default"] = 1] = "Default";
    ConfigurationSource[ConfigurationSource["User"] = 2] = "User";
    ConfigurationSource[ConfigurationSource["Workspace"] = 3] = "Workspace";
})(ConfigurationSource = exports.ConfigurationSource || (exports.ConfigurationSource = {}));
/**
 * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)
 */
function getConfigurationValue(config, settingPath, defaultValue) {
    function accessSetting(config, path) {
        var current = config;
        for (var i = 0; i < path.length; i++) {
            current = current[path[i]];
            if (typeof current === 'undefined') {
                return undefined;
            }
        }
        return current;
    }
    var path = settingPath.split('.');
    var result = accessSetting(config, path);
    return typeof result === 'undefined' ? defaultValue : result;
}
exports.getConfigurationValue = getConfigurationValue;
