/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var builder_1 = require("vs/base/browser/builder");
var quickOpenWidget_1 = require("vs/base/parts/quickopen/browser/quickOpenWidget");
var editorBrowser_1 = require("vs/editor/browser/editorBrowser");
var QuickOpenEditorWidget = (function () {
    function QuickOpenEditorWidget(codeEditor, onOk, onCancel, onType, configuration) {
        this.codeEditor = codeEditor;
        this.create(onOk, onCancel, onType, configuration);
    }
    QuickOpenEditorWidget.prototype.create = function (onOk, onCancel, onType, configuration) {
        this.domNode = builder_1.$().div().getHTMLElement();
        this.quickOpenWidget = new quickOpenWidget_1.QuickOpenWidget(this.domNode, {
            onOk: onOk,
            onCancel: onCancel,
            onType: onType
        }, {
            inputPlaceHolder: null,
            inputAriaLabel: configuration.inputAriaLabel
        }, null);
        this.quickOpenWidget.create();
        this.codeEditor.addOverlayWidget(this);
    };
    QuickOpenEditorWidget.prototype.setInput = function (model, focus) {
        this.quickOpenWidget.setInput(model, focus);
    };
    QuickOpenEditorWidget.prototype.getId = function () {
        return QuickOpenEditorWidget.ID;
    };
    QuickOpenEditorWidget.prototype.getDomNode = function () {
        return this.domNode;
    };
    QuickOpenEditorWidget.prototype.destroy = function () {
        this.codeEditor.removeOverlayWidget(this);
        this.quickOpenWidget.dispose();
    };
    QuickOpenEditorWidget.prototype.isVisible = function () {
        return this.visible;
    };
    QuickOpenEditorWidget.prototype.show = function (value) {
        this.visible = true;
        var editorLayout = this.codeEditor.getLayoutInfo();
        if (editorLayout) {
            this.quickOpenWidget.layout(new builder_1.Dimension(editorLayout.width, editorLayout.height));
        }
        this.quickOpenWidget.show(value);
        this.codeEditor.layoutOverlayWidget(this);
    };
    QuickOpenEditorWidget.prototype.hide = function () {
        this.visible = false;
        this.quickOpenWidget.hide();
        this.codeEditor.layoutOverlayWidget(this);
    };
    QuickOpenEditorWidget.prototype.getPosition = function () {
        if (this.visible) {
            return {
                preference: editorBrowser_1.OverlayWidgetPositionPreference.TOP_CENTER
            };
        }
        return null;
    };
    return QuickOpenEditorWidget;
}());
QuickOpenEditorWidget.ID = 'editor.contrib.quickOpenEditorWidget';
exports.QuickOpenEditorWidget = QuickOpenEditorWidget;
