/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var paths_1 = require("vs/base/common/paths");
var SnippetVariablesResolver = (function () {
    function SnippetVariablesResolver(editor) {
        this._editor = editor;
    }
    SnippetVariablesResolver.prototype.resolve = function (name) {
        var model = this._editor.getModel();
        if (!model) {
            throw new Error();
        }
        switch (name) {
            case 'SELECTION':
            case 'TM_SELECTED_TEXT': return this._tmSelectedText();
            case 'TM_CURRENT_LINE': return this._tmCurrentLine();
            case 'TM_CURRENT_WORD': return this._tmCurrentWord();
            case 'TM_LINE_INDEX': return this._tmLineIndex();
            case 'TM_LINE_NUMBER': return this._tmLineNumber();
            case 'TM_FILENAME': return this._tmFilename();
            case 'TM_DIRECTORY': return this._tmDirectory();
            case 'TM_FILEPATH': return this._tmFilepath();
        }
        return undefined;
    };
    SnippetVariablesResolver.prototype._tmCurrentLine = function () {
        var positionLineNumber = this._editor.getSelection().positionLineNumber;
        return this._editor.getModel().getValueInRange({ startLineNumber: positionLineNumber, startColumn: 1, endLineNumber: positionLineNumber, endColumn: Number.MAX_VALUE });
    };
    SnippetVariablesResolver.prototype._tmCurrentWord = function () {
        var word = this._editor.getModel().getWordAtPosition(this._editor.getPosition());
        return word ? word.word : '';
    };
    SnippetVariablesResolver.prototype._tmFilename = function () {
        return paths_1.basename(this._editor.getModel().uri.fsPath);
    };
    SnippetVariablesResolver.prototype._tmDirectory = function () {
        var dir = paths_1.dirname(paths_1.normalize(this._editor.getModel().uri.fsPath));
        return dir !== '.' ? dir : '';
    };
    SnippetVariablesResolver.prototype._tmFilepath = function () {
        return this._editor.getModel().uri.fsPath;
    };
    SnippetVariablesResolver.prototype._tmLineIndex = function () {
        return String(this._editor.getSelection().positionLineNumber - 1);
    };
    SnippetVariablesResolver.prototype._tmLineNumber = function () {
        return String(this._editor.getSelection().positionLineNumber);
    };
    SnippetVariablesResolver.prototype._tmSelectedText = function () {
        return this._editor.getModel().getValueInRange(this._editor.getSelection());
    };
    return SnippetVariablesResolver;
}());
exports.SnippetVariablesResolver = SnippetVariablesResolver;
