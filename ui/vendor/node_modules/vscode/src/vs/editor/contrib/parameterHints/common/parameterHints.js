/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var errors_1 = require("vs/base/common/errors");
var editorCommonExtensions_1 = require("vs/editor/common/editorCommonExtensions");
var modes_1 = require("vs/editor/common/modes");
var async_1 = require("vs/base/common/async");
var contextkey_1 = require("vs/platform/contextkey/common/contextkey");
exports.Context = {
    Visible: new contextkey_1.RawContextKey('parameterHintsVisible', false),
    MultipleSignatures: new contextkey_1.RawContextKey('parameterHintsMultipleSignatures', false),
};
function provideSignatureHelp(model, position) {
    var supports = modes_1.SignatureHelpProviderRegistry.ordered(model);
    var result;
    return async_1.sequence(supports.map(function (support) { return function () {
        if (result) {
            // stop when there is a result
            return;
        }
        return async_1.asWinJsPromise(function (token) { return support.provideSignatureHelp(model, position, token); }).then(function (thisResult) {
            result = thisResult;
        }, errors_1.onUnexpectedExternalError);
    }; })).then(function () { return result; });
}
exports.provideSignatureHelp = provideSignatureHelp;
editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeSignatureHelpProvider', provideSignatureHelp);
