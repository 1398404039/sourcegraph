/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var arrays_1 = require("vs/base/common/arrays");
var errors_1 = require("vs/base/common/errors");
var winjs_base_1 = require("vs/base/common/winjs.base");
var editorCommonExtensions_1 = require("vs/editor/common/editorCommonExtensions");
var modes_1 = require("vs/editor/common/modes");
var async_1 = require("vs/base/common/async");
function getHover(model, position) {
    var supports = modes_1.HoverProviderRegistry.ordered(model);
    var values = [];
    var promises = supports.map(function (support, idx) {
        return async_1.asWinJsPromise(function (token) {
            return support.provideHover(model, position, token);
        }).then(function (result) {
            if (result) {
                var hasRange = (typeof result.range !== 'undefined');
                var hasHtmlContent = (typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0);
                if (hasRange && hasHtmlContent) {
                    values[idx] = result;
                }
            }
        }, function (err) {
            errors_1.onUnexpectedExternalError(err);
        });
    });
    return winjs_base_1.TPromise.join(promises).then(function () { return arrays_1.coalesce(values); });
}
exports.getHover = getHover;
editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeHoverProvider', getHover);
