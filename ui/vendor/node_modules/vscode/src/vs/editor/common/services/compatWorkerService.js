/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var instantiation_1 = require('vs/platform/instantiation/common/instantiation');
exports.ICompatWorkerService = instantiation_1.createDecorator('compatWorkerService');
function findMember(proto, target) {
    for (var i in proto) {
        if (proto[i] === target) {
            return i;
        }
    }
    throw new Error('Member not found in prototype');
}
function CompatWorkerAttr(type, target) {
    var methodName = findMember(type.prototype, target);
    type.prototype[methodName] = function () {
        var param = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            param[_i - 0] = arguments[_i];
        }
        var obj = this;
        return obj.compatWorkerService.CompatWorker(obj, methodName, target, param);
    };
}
exports.CompatWorkerAttr = CompatWorkerAttr;
