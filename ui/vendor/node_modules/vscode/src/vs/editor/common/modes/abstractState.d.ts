import { IState } from 'vs/editor/common/modes';
import { LineStream } from 'vs/editor/common/modes/lineStream';
/**
 * @internal
 */
export interface ITokenizationResult {
    type?: string;
    dontMergeWithPrev?: boolean;
    nextState?: AbstractState;
}
export declare abstract class AbstractState implements IState {
    _abstractStateBrand: void;
    private modeId;
    private stateData;
    constructor(modeId: string, stateData?: IState);
    getModeId(): string;
    clone(): AbstractState;
    protected abstract makeClone(): AbstractState;
    protected initializeFrom(other: AbstractState): void;
    getStateData(): IState;
    setStateData(state: IState): void;
    equals(other: IState): boolean;
    abstract tokenize(stream: LineStream): ITokenizationResult;
    static safeEquals(a: IState, b: IState): boolean;
    static safeClone(state: IState): IState;
}
