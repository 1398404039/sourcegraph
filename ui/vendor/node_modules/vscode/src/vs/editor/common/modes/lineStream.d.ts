/**
 * A LineStream is a character & token stream abstraction over a line of text. It
 *  is never multi-line. The stream can be navigated character by character, or
 *  token by token, given some token rules.
 * @internal
 */
export declare class LineStream {
    private _source;
    private _sourceLength;
    private _pos;
    constructor(source: string);
    /**
     * Returns the current character position of the stream on the line.
     */
    pos(): number;
    /**
     * Returns true iff the stream is at the end of the line.
     */
    eos(): boolean;
    /**
     * Returns the next character in the stream.
     */
    peek(): string;
    /**
     * Advances the stream by `n` characters.
     */
    advance(n: number): void;
    /**
     * Advances the stream until the end of the line.
     */
    advanceToEOS(): string;
    /**
     * Brings the stream back `n` characters.
     */
    goBack(n: number): void;
}
