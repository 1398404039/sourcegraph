/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
// include these in the editor bundle because they are widely used by many languages
require('vs/editor/common/languages.common');
var severity_1 = require('vs/base/common/severity');
var winjs_base_1 = require('vs/base/common/winjs.base');
var eventService_1 = require('vs/platform/event/common/eventService');
var event_1 = require('vs/platform/event/common/event');
var abstractExtensionService_1 = require('vs/platform/extensions/common/abstractExtensionService');
var extensions_1 = require('vs/platform/extensions/common/extensions');
var serviceCollection_1 = require('vs/platform/instantiation/common/serviceCollection');
var instantiationService_1 = require('vs/platform/instantiation/common/instantiationService');
var modeServiceImpl_1 = require('vs/editor/common/services/modeServiceImpl');
var modeService_1 = require('vs/editor/common/services/modeService');
var resourceServiceImpl_1 = require('vs/editor/common/services/resourceServiceImpl');
var resourceService_1 = require('vs/editor/common/services/resourceService');
var compatWorkerServiceWorker_1 = require('vs/editor/common/services/compatWorkerServiceWorker');
var compatWorkerService_1 = require('vs/editor/common/services/compatWorkerService');
var WorkerExtensionService = (function (_super) {
    __extends(WorkerExtensionService, _super);
    function WorkerExtensionService() {
        _super.call(this, true);
    }
    WorkerExtensionService.prototype._showMessage = function (severity, msg) {
        switch (severity) {
            case severity_1.default.Error:
                console.error(msg);
                break;
            case severity_1.default.Warning:
                console.warn(msg);
                break;
            case severity_1.default.Info:
                console.info(msg);
                break;
            default:
                console.log(msg);
        }
    };
    WorkerExtensionService.prototype._createFailedExtension = function () {
        throw new Error('unexpected');
    };
    WorkerExtensionService.prototype._actualActivateExtension = function (extensionDescription) {
        throw new Error('unexpected');
    };
    return WorkerExtensionService;
}(abstractExtensionService_1.AbstractExtensionService));
var EditorWorkerServer = (function () {
    function EditorWorkerServer() {
    }
    EditorWorkerServer.prototype.initialize = function (mainThread, complete, error, progress, initData) {
        var services = new serviceCollection_1.ServiceCollection();
        var instantiationService = new instantiationService_1.InstantiationService(services);
        var extensionService = new WorkerExtensionService();
        services.set(extensions_1.IExtensionService, extensionService);
        var resourceService = new resourceServiceImpl_1.ResourceService();
        services.set(resourceService_1.IResourceService, resourceService);
        services.set(event_1.IEventService, new eventService_1.EventService());
        var modeService = new modeServiceImpl_1.ModeServiceImpl(instantiationService, extensionService);
        services.set(modeService_1.IModeService, modeService);
        this.compatWorkerService = new compatWorkerServiceWorker_1.CompatWorkerServiceWorker(resourceService, modeService, initData.modesRegistryData);
        services.set(compatWorkerService_1.ICompatWorkerService, this.compatWorkerService);
        complete(undefined);
    };
    EditorWorkerServer.prototype.request = function (mainThread, complete, error, progress, data) {
        try {
            winjs_base_1.TPromise.as(this.compatWorkerService.handleMainRequest(data.target, data.methodName, data.args)).then(complete, error);
        }
        catch (err) {
            error(err);
        }
    };
    return EditorWorkerServer;
}());
exports.EditorWorkerServer = EditorWorkerServer;
exports.value = new EditorWorkerServer();
