/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var AbstractState = (function () {
    function AbstractState(modeId, stateData) {
        if (stateData === void 0) { stateData = null; }
        this.modeId = modeId;
        this.stateData = stateData;
    }
    AbstractState.prototype.getModeId = function () {
        return this.modeId;
    };
    AbstractState.prototype.clone = function () {
        var result = this.makeClone();
        result.initializeFrom(this);
        return result;
    };
    AbstractState.prototype.initializeFrom = function (other) {
        this.stateData = other.stateData !== null ? other.stateData.clone() : null;
    };
    AbstractState.prototype.getStateData = function () {
        return this.stateData;
    };
    AbstractState.prototype.setStateData = function (state) {
        this.stateData = state;
    };
    AbstractState.prototype.equals = function (other) {
        if (other === null || this.modeId !== other.getModeId()) {
            return false;
        }
        if (other instanceof AbstractState) {
            return AbstractState.safeEquals(this.stateData, other.stateData);
        }
        return false;
    };
    AbstractState.safeEquals = function (a, b) {
        if (a === null && b === null) {
            return true;
        }
        if (a === null || b === null) {
            return false;
        }
        return a.equals(b);
    };
    AbstractState.safeClone = function (state) {
        if (state) {
            return state.clone();
        }
        return null;
    };
    return AbstractState;
}());
exports.AbstractState = AbstractState;
