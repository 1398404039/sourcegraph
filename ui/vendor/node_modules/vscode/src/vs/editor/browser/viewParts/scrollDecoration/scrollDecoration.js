/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
require("./scrollDecoration.css");
var dom = require("vs/base/browser/dom");
var styleMutator_1 = require("vs/base/browser/styleMutator");
var editorBrowser_1 = require("vs/editor/browser/editorBrowser");
var viewPart_1 = require("vs/editor/browser/view/viewPart");
var ScrollDecorationViewPart = (function (_super) {
    __extends(ScrollDecorationViewPart, _super);
    function ScrollDecorationViewPart(context) {
        var _this = _super.call(this, context) || this;
        _this._scrollTop = 0;
        _this._width = 0;
        _this._shouldShow = false;
        _this._useShadows = _this._context.configuration.editor.viewInfo.scrollbar.useShadows;
        _this._domNode = document.createElement('div');
        return _this;
    }
    ScrollDecorationViewPart.prototype._updateShouldShow = function () {
        var newShouldShow = (this._useShadows && this._scrollTop > 0);
        if (this._shouldShow !== newShouldShow) {
            this._shouldShow = newShouldShow;
            return true;
        }
        return false;
    };
    ScrollDecorationViewPart.prototype.getDomNode = function () {
        return this._domNode;
    };
    // --- begin event handlers
    ScrollDecorationViewPart.prototype.onConfigurationChanged = function (e) {
        if (e.viewInfo.scrollbar) {
            this._useShadows = this._context.configuration.editor.viewInfo.scrollbar.useShadows;
        }
        return this._updateShouldShow();
    };
    ScrollDecorationViewPart.prototype.onLayoutChanged = function (layoutInfo) {
        if (this._width !== layoutInfo.width) {
            this._width = layoutInfo.width;
            return true;
        }
        return false;
    };
    ScrollDecorationViewPart.prototype.onScrollChanged = function (e) {
        this._scrollTop = e.scrollTop;
        return this._updateShouldShow();
    };
    // --- end event handlers
    ScrollDecorationViewPart.prototype.prepareRender = function (ctx) {
        // Nothing to read
        if (!this.shouldRender()) {
            throw new Error('I did not ask to render!');
        }
    };
    ScrollDecorationViewPart.prototype.render = function (ctx) {
        styleMutator_1.StyleMutator.setWidth(this._domNode, this._width);
        dom.toggleClass(this._domNode, editorBrowser_1.ClassNames.SCROLL_DECORATION, this._shouldShow);
    };
    return ScrollDecorationViewPart;
}(viewPart_1.ViewPart));
exports.ScrollDecorationViewPart = ScrollDecorationViewPart;
