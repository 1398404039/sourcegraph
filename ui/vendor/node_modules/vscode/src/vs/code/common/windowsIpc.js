/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var winjs_base_1 = require('vs/base/common/winjs.base');
var ipc_1 = require('vs/base/parts/ipc/common/ipc');
var event_1 = require('vs/base/common/event');
var WindowEventChannel = (function () {
    function WindowEventChannel(service) {
        this.service = service;
        this.onNewWindowOpen = event_1.buffer(service.onNewWindowOpen, true);
        this.onWindowFocus = event_1.buffer(service.onWindowFocus, true);
    }
    WindowEventChannel.prototype.call = function (command, args) {
        switch (command) {
            case 'event:onNewWindowOpen':
                return ipc_1.eventToCall(this.onNewWindowOpen);
            case 'event:onWindowFocus':
                return ipc_1.eventToCall(this.onWindowFocus);
        }
        return winjs_base_1.TPromise.wrapError('invalid command');
    };
    return WindowEventChannel;
}());
exports.WindowEventChannel = WindowEventChannel;
var WindowEventChannelClient = (function () {
    function WindowEventChannelClient(channel) {
        this.channel = channel;
        this._onNewWindowOpen = ipc_1.eventFromCall(this.channel, 'event:onNewWindowOpen');
        this._onWindowFocus = ipc_1.eventFromCall(this.channel, 'event:onWindowFocus');
    }
    Object.defineProperty(WindowEventChannelClient.prototype, "onNewWindowOpen", {
        get: function () {
            return this._onNewWindowOpen;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WindowEventChannelClient.prototype, "onWindowFocus", {
        get: function () {
            return this._onWindowFocus;
        },
        enumerable: true,
        configurable: true
    });
    return WindowEventChannelClient;
}());
exports.WindowEventChannelClient = WindowEventChannelClient;
