'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.renderStatic = renderStatic;
exports.renderStaticOptimized = renderStaticOptimized;

var _index = require('./index.js');

/**** serverside stuff ****/

// the api's copied from aphrodite, with 1 key difference 
// we include *all* the css generated by the app 
// to optimize to only include generated styles on the pages 
// use renderStaticOptimized
function renderStatic(fn) {
  var optimized = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

  var html = fn();
  if (html === undefined) {
    throw new Error('did you forget to return from renderToString?');
  }
  var rules = _index.styleSheet.rules(),
      css = rules.map(function (r) {
    return r.cssText;
  }).join('\n');
  if (optimized) {
    var _ret = function () {
      // parse out ids from html
      // reconstruct css/rules/cache to pass

      var o = { html: html, ids: [], css: '', rules: [] };
      var regex = /data\-css\-([a-zA-Z0-9]+)=/gm;
      var match = void 0,
          ids = [];
      while ((match = regex.exec(html)) !== null) {
        ids.push(match[1]);
      }
      ids.forEach(function (id) {
        // o.cache[id] = styleSheet.cache[id]
        o.ids.push(id);
        // todo - add fonts / animations
        // todo - add raw rules (without any data-css stuff)
        o.css += rules.map(function (x) {
          return x.cssText;
        }).filter(function (r) {
          return new RegExp('\\[data-css-' + id + '\\]').test(r);
        }).map(function (x) {
          return o.rules.push(x), x;
        }).join('\n') + '\n';
      });
      return {
        v: o
      };
    }();

    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
  }
  return { html: html, ids: Object.keys(_index.styleSheet.inserted), css: css, rules: rules };
}

function renderStaticOptimized(fn) {
  return renderStatic(fn, true);
}