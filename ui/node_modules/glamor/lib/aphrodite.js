'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyleSheet = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

// todo 
// - animations 
// - fonts 

exports.css = css;
exports.createElement = createElement;

var _index = require('./index.js');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function stylesToRule(o) {
  var _style = {},
      _rules = [];
  Object.keys(o).forEach(function (key) {
    if (key.charAt(0) === ':') {
      (0, _index.select)(key, o[key]);
    } else if (/^\@media/.exec(key)) {
      _rules.push((0, _index.media)(key.substring(6), stylesToRule(o[key])));
    } else {
      _style[key] = o[key];
    }
  });
  return _index.merge.apply(undefined, [_style || {}].concat(_rules));
}

var StyleSheet = exports.StyleSheet = {
  create: function create(spec) {
    var entries = Object.keys(spec).map(function (name) {
      var rule = stylesToRule(spec[name]);
      return [name, 'data-css-' + (0, _index.idFor)(rule)];
    });

    return entries.reduce(function (o, _ref) {
      var _ref2 = _slicedToArray(_ref, 2);

      var name = _ref2[0];
      var val = _ref2[1];
      return o[name] = val, o;
    }, {});
  }
};

function css() {
  for (var _len = arguments.length, rules = Array(_len), _key = 0; _key < _len; _key++) {
    rules[_key] = arguments[_key];
  }

  return rules.filter(function (x) {
    return !!x;
  }).join(' ');
}

function createElement(tag) {
  var props = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
  var children = arguments[2];

  var styles = ((props || {}).className || '').split(' ').map(function (x) {
    return x.trim();
  });

  var css = styles.filter(function (x) {
    return (/^data\-css\-/.exec(x)
    );
  }).map(function (x) {
    return _defineProperty({}, x, '');
  });
  var classes = styles.filter(function (x) {
    return !/^data\-css\-/.exec(x);
  }).join(' ');

  return _react2.default.createElement(tag, _extends({}, props, (props || {}).className ? { className: classes || null } : {}, css.length > 0 ? _index.merge.apply(undefined, _toConsumableArray(css)) : {}), children);
}