/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var winjs_base_1 = require('vs/base/common/winjs.base');
var platform_1 = require('vs/base/common/platform');
var types_1 = require('vs/base/common/types');
var actions_1 = require('vs/base/common/actions');
var dropdown_1 = require('vs/base/browser/ui/dropdown/dropdown');
var LinksDropdownMenu = (function (_super) {
    __extends(LinksDropdownMenu, _super);
    function LinksDropdownMenu(container, options) {
        _super.call(this, container, options);
        this.tooltip = options.tooltip;
    }
    /*protected*/ LinksDropdownMenu.prototype.onEvent = function (e, activeElement) {
        if (e instanceof KeyboardEvent && (e.ctrlKey || (platform_1.isMacintosh && e.metaKey))) {
            return; // allow to use Ctrl/Meta in workspace dropdown menu
        }
        this.hide();
    };
    return LinksDropdownMenu;
}(dropdown_1.DropdownMenu));
exports.LinksDropdownMenu = LinksDropdownMenu;
var LinkDropdownAction = (function (_super) {
    __extends(LinkDropdownAction, _super);
    function LinkDropdownAction(id, name, clazz, url, forceOpenInNewTab) {
        _super.call(this, id, name, clazz, true, function (e) {
            var urlString = url;
            if (types_1.isFunction(url)) {
                urlString = url();
            }
            if (forceOpenInNewTab || (e instanceof MouseEvent && (e.ctrlKey || (platform_1.isMacintosh && e.metaKey)))) {
                window.open(urlString, '_blank');
            }
            else {
                window.location.href = urlString;
            }
            return winjs_base_1.TPromise.as(true);
        });
    }
    return LinkDropdownAction;
}(actions_1.Action));
exports.LinkDropdownAction = LinkDropdownAction;
