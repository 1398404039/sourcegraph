/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
require("./menu.css");
var builder_1 = require("vs/base/browser/builder");
var actionbar_1 = require("vs/base/browser/ui/actionbar/actionbar");
var eventEmitter_1 = require("vs/base/common/eventEmitter");
var Menu = (function (_super) {
    __extends(Menu, _super);
    function Menu(container, actions, options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this) || this;
        builder_1.$(container).addClass('monaco-menu-container');
        var $menu = builder_1.$('.monaco-menu').appendTo(container);
        _this.actionBar = new actionbar_1.ActionBar($menu, {
            orientation: actionbar_1.ActionsOrientation.VERTICAL,
            actionItemProvider: options.actionItemProvider,
            context: options.context,
            actionRunner: options.actionRunner
        });
        _this.listener = _this.addEmitter2(_this.actionBar);
        _this.actionBar.push(actions, { icon: true, label: true });
        return _this;
    }
    Menu.prototype.focus = function () {
        this.actionBar.focus(true);
    };
    Menu.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        if (this.actionBar) {
            this.actionBar.dispose();
            this.actionBar = null;
        }
        if (this.listener) {
            this.listener.dispose();
            this.listener = null;
        }
    };
    return Menu;
}(eventEmitter_1.EventEmitter));
exports.Menu = Menu;
