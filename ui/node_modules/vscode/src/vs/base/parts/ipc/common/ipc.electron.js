/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
"use strict";
var lifecycle_1 = require("vs/base/common/lifecycle");
var event_1 = require("vs/base/common/event");
var Protocol = (function () {
    function Protocol(sender, onMessageEvent) {
        this.sender = sender;
        this.onMessageEvent = onMessageEvent;
        var emitter = new event_1.Emitter();
        onMessageEvent(function (msg) { return emitter.fire(msg); });
        this._onMessage = emitter.event;
    }
    Object.defineProperty(Protocol.prototype, "onMessage", {
        get: function () { return this._onMessage; },
        enumerable: true,
        configurable: true
    });
    Protocol.prototype.send = function (message) {
        try {
            this.sender.send('ipc:message', message);
        }
        catch (e) {
        }
    };
    Protocol.prototype.dispose = function () {
        this.listener = lifecycle_1.dispose(this.listener);
    };
    return Protocol;
}());
exports.Protocol = Protocol;
