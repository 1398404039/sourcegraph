/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
"use strict";
var nls = require("vs/nls");
var electron_1 = require("electron");
var platform = require("vs/base/common/platform");
var winjs_base_1 = require("vs/base/common/winjs.base");
var GitAskpassService = (function () {
    function GitAskpassService() {
        var _this = this;
        this.askpassCache = Object.create(null);
        electron_1.ipcMain.on('git:askpass', function (event, result) {
            _this.askpassCache[result.id].credentials = result.credentials;
        });
    }
    GitAskpassService.prototype.askpass = function (id, host, command) {
        var _this = this;
        return new winjs_base_1.TPromise(function (c, e) {
            var cachedResult = _this.askpassCache[id];
            if (typeof cachedResult !== 'undefined') {
                return c(cachedResult.credentials);
            }
            if (command === 'fetch') {
                return c({ username: '', password: '' });
            }
            var win = new electron_1.BrowserWindow({
                alwaysOnTop: true,
                skipTaskbar: true,
                resizable: false,
                width: 450,
                height: platform.isWindows ? 280 : 260,
                show: true,
                title: nls.localize('git', "Git")
            });
            win.setMenuBarVisibility(false);
            _this.askpassCache[id] = {
                window: win,
                credentials: null
            };
            win.loadURL(require.toUrl('vs/workbench/parts/git/electron-main/index.html'));
            win.webContents.executeJavaScript('init(' + JSON.stringify({ id: id, host: host, command: command }) + ')');
            win.once('closed', function () {
                c(_this.askpassCache[id].credentials);
                setTimeout(function () { return delete _this.askpassCache[id]; }, 1000 * 10);
            });
        });
    };
    return GitAskpassService;
}());
exports.GitAskpassService = GitAskpassService;
