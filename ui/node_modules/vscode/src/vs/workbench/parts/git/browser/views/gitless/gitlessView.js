/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
require("./gitlessView.css");
var nls = require("vs/nls");
var platform = require("vs/base/common/platform");
var winjs = require("vs/base/common/winjs.base");
var ee = require("vs/base/common/eventEmitter");
var builder = require("vs/base/browser/builder");
var product_1 = require("vs/platform/product");
var $ = builder.$;
var GitlessView = (function (_super) {
    __extends(GitlessView, _super);
    function GitlessView() {
        var _this = _super.call(this) || this;
        _this.ID = 'gitless';
        return _this;
    }
    Object.defineProperty(GitlessView.prototype, "element", {
        get: function () {
            if (!this._element) {
                this.render();
            }
            return this._element;
        },
        enumerable: true,
        configurable: true
    });
    GitlessView.prototype.render = function () {
        var instructions;
        if (platform.isMacintosh) {
            instructions = nls.localize('macInstallWith', "You can either install it with {0}, download it from {1} or install the {2} command line developer tools, by simply typing {3} on a Terminal prompt.", '<a href="http://brew.sh/" tabindex="0" target="_blank">Homebrew</a>', '<a href="http://git-scm.com/download/mac" tabindex="0" target="_blank">git-scm.com</a>', '<a href="https://developer.apple.com/xcode/" tabindex="0" target="_blank">XCode</a>', '<code>git</code>');
        }
        else if (platform.isWindows) {
            instructions = nls.localize('winInstallWith', "You can either install it with {0} or download it from {1}.", '<a href="https://chocolatey.org/packages/git" tabindex="0" target="_blank">Chocolatey</a>', '<a href="http://git-scm.com/download/win" tabindex="0" target="_blank">git-scm.com</a>');
        }
        else if (platform.isLinux) {
            instructions = nls.localize('linuxDownloadFrom', "You can download it from {0}.", '<a href="http://git-scm.com/download/linux" tabindex="0" target="_blank">git-scm.com</a>');
        }
        else {
            instructions = nls.localize('downloadFrom', "You can download it from {0}.", '<a href="http://git-scm.com/download" tabindex="0" target="_blank">git-scm.com</a>');
        }
        this._element = $([
            '<div class="gitless-view">',
            '<p>', nls.localize('looksLike', "It looks like git is not installed on your system."), '</p>',
            '<p>', instructions, '</p>',
            '<p>', nls.localize('pleaseRestart', "Once git is installed, please restart {0}.", product_1.default.nameLong), '</p>',
            '</div>'
        ].join('')).getHTMLElement();
    };
    GitlessView.prototype.focus = function () {
        return;
    };
    GitlessView.prototype.layout = function (dimension) {
        return;
    };
    GitlessView.prototype.setVisible = function (visible) {
        return winjs.TPromise.as(null);
    };
    GitlessView.prototype.getControl = function () {
        return null;
    };
    GitlessView.prototype.getActions = function () {
        return [];
    };
    GitlessView.prototype.getSecondaryActions = function () {
        return [];
    };
    return GitlessView;
}(ee.EventEmitter));
exports.GitlessView = GitlessView;
