import { IWorkbenchContribution } from 'vs/workbench/common/contributions';
import { ITextFileService } from 'vs/workbench/parts/files/common/files';
import { IEditorGroupService } from 'vs/workbench/services/group/common/groupService';
import { ILifecycleService } from 'vs/platform/lifecycle/common/lifecycle';
import { IWorkbenchEditorService } from 'vs/workbench/services/editor/common/editorService';
import { IEventService } from 'vs/platform/event/common/event';
export declare class FileEditorTracker implements IWorkbenchContribution {
    private eventService;
    private editorService;
    private textFileService;
    private lifecycleService;
    private editorGroupService;
    private static FILE_CHANGE_UPDATE_DELAY;
    private stacks;
    private toUnbind;
    constructor(eventService: IEventService, editorService: IWorkbenchEditorService, textFileService: ITextFileService, lifecycleService: ILifecycleService, editorGroupService: IEditorGroupService);
    getId(): string;
    private registerListeners();
    private onLocalFileChange(e);
    private handleMovedFileInOpenedEditors(oldResource, newResource, mimeHint?);
    private onFileChanges(e);
    private handleUpdatesToVisibleEditors(e);
    private isEditorShowingPath(editor, resource);
    private getMatchingFileEditorInputFromDiff(input, deletedResource);
    private getMatchingFileEditorInputFromDiff(input, updatedFiles);
    private getMatchingFileEditorInputFromInput(input, deletedResource);
    private getMatchingFileEditorInputFromInput(input, updatedFiles);
    private containsResource(input, resource);
    dispose(): void;
}
