/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var editor_1 = require('vs/workbench/common/editor');
var explorerViewModel_1 = require('vs/workbench/parts/files/common/explorerViewModel');
var contextkey_1 = require('vs/platform/contextkey/common/contextkey');
/**
 * Explorer viewlet id.
 */
exports.VIEWLET_ID = 'workbench.view.explorer';
exports.ExplorerViewletVisible = new contextkey_1.RawContextKey('explorerViewletVisible', true);
/**
 * File editor input id.
 */
exports.FILE_EDITOR_INPUT_ID = 'workbench.editors.files.fileEditorInput';
/**
 * Text file editor id.
 */
exports.TEXT_FILE_EDITOR_ID = 'workbench.editors.files.textFileEditor';
/**
 * Binary file editor id.
 */
exports.BINARY_FILE_EDITOR_ID = 'workbench.editors.files.binaryFileEditor';
/**
 * API class to denote file editor inputs. Internal implementation is provided.
 *
 * Note: This class is not intended to be instantiated.
 */
var FileEditorInput = (function (_super) {
    __extends(FileEditorInput, _super);
    function FileEditorInput() {
        _super.apply(this, arguments);
    }
    return FileEditorInput;
}(editor_1.EditorInput));
exports.FileEditorInput = FileEditorInput;
/**
 * Helper to get a file resource from an object.
 */
function asFileResource(obj) {
    if (obj instanceof explorerViewModel_1.FileStat) {
        var stat = obj;
        return {
            resource: stat.resource,
            isDirectory: stat.isDirectory
        };
    }
    return null;
}
exports.asFileResource = asFileResource;
