/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var nls = require('vs/nls');
var emmetActions_1 = require('vs/workbench/parts/emmet/node/emmetActions');
var editorCommonExtensions_1 = require('vs/editor/common/editorCommonExtensions');
var GoToMatchingPairAction = (function (_super) {
    __extends(GoToMatchingPairAction, _super);
    function GoToMatchingPairAction() {
        _super.call(this, 'editor.emmet.action.matchingPair', nls.localize('matchingPair', "Emmet: Go to Matching Pair"), 'Emmet: Go to Matching Pair', 'matching_pair');
    }
    GoToMatchingPairAction = __decorate([
        editorCommonExtensions_1.editorAction
    ], GoToMatchingPairAction);
    return GoToMatchingPairAction;
}(emmetActions_1.BasicEmmetEditorAction));
