/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var nls_1 = require('vs/nls');
var winjs_base_1 = require('vs/base/common/winjs.base');
var lifecycle_1 = require('vs/base/common/lifecycle');
var baseEditor_1 = require('vs/workbench/browser/parts/editor/baseEditor');
var telemetry_1 = require('vs/platform/telemetry/common/telemetry');
var workspace_1 = require('vs/platform/workspace/common/workspace');
var editorService_1 = require('vs/workbench/services/editor/common/editorService');
var textEditorModel_1 = require('vs/workbench/common/editor/textEditorModel');
var htmlInput_1 = require('vs/workbench/parts/html/common/htmlInput');
var themeService_1 = require('vs/workbench/services/themes/common/themeService');
var opener_1 = require('vs/platform/opener/common/opener');
var webview_1 = require('./webview');
/**
 * An implementation of editor for showing HTML content in an IFrame by leveraging the HTML input.
 */
var HtmlPreviewPart = (function (_super) {
    __extends(HtmlPreviewPart, _super);
    function HtmlPreviewPart(telemetryService, editorService, themeService, openerService, contextService) {
        _super.call(this, HtmlPreviewPart.ID, telemetryService);
        this._modelChangeSubscription = lifecycle_1.empty;
        this._themeChangeSubscription = lifecycle_1.empty;
        this._editorService = editorService;
        this._themeService = themeService;
        this._openerService = openerService;
        this._baseUrl = contextService.toResource('/');
    }
    HtmlPreviewPart.prototype.dispose = function () {
        // remove from dom
        this._webviewDisposables = lifecycle_1.dispose(this._webviewDisposables);
        // unhook listeners
        this._themeChangeSubscription.dispose();
        this._modelChangeSubscription.dispose();
        this._model = undefined;
        _super.prototype.dispose.call(this);
    };
    HtmlPreviewPart.prototype.createEditor = function (parent) {
        this._container = document.createElement('div');
        this._container.style.paddingLeft = '20px';
        parent.getHTMLElement().appendChild(this._container);
    };
    Object.defineProperty(HtmlPreviewPart.prototype, "webview", {
        get: function () {
            var _this = this;
            if (!this._webview) {
                this._webview = new webview_1.default(this._container, document.querySelector('.monaco-editor-background'));
                this._webview.baseUrl = this._baseUrl && this._baseUrl.toString(true);
                this._webviewDisposables = [
                    this._webview,
                    this._webview.onDidClickLink(function (uri) { return _this._openerService.open(uri); }),
                    this._webview.onDidLoadContent(function (data) { return _this.telemetryService.publicLog('previewHtml', data.stats); })
                ];
            }
            return this._webview;
        },
        enumerable: true,
        configurable: true
    });
    HtmlPreviewPart.prototype.changePosition = function (position) {
        // what this actually means is that we got reparented. that
        // has caused the webview to stop working and we need to reset it
        this._doSetVisible(false);
        this._doSetVisible(true);
        _super.prototype.changePosition.call(this, position);
    };
    HtmlPreviewPart.prototype.setEditorVisible = function (visible, position) {
        this._doSetVisible(visible);
        _super.prototype.setEditorVisible.call(this, visible, position);
    };
    HtmlPreviewPart.prototype._doSetVisible = function (visible) {
        var _this = this;
        if (!visible) {
            this._themeChangeSubscription.dispose();
            this._modelChangeSubscription.dispose();
            this._webviewDisposables = lifecycle_1.dispose(this._webviewDisposables);
            this._webview = undefined;
        }
        else {
            this._themeChangeSubscription = this._themeService.onDidColorThemeChange(function (themeId) { return _this.webview.style(themeId); });
            this.webview.style(this._themeService.getColorTheme());
            if (this._hasValidModel()) {
                this._modelChangeSubscription = this._model.onDidChangeContent(function () { return _this.webview.contents = _this._model.getLinesContent(); });
                this.webview.contents = this._model.getLinesContent();
            }
        }
    };
    HtmlPreviewPart.prototype._hasValidModel = function () {
        return this._model && !this._model.isDisposed();
    };
    HtmlPreviewPart.prototype.layout = function (dimension) {
        var width = dimension.width, height = dimension.height;
        // we take the padding we set on create into account
        this._container.style.width = Math.max(width - 20, 0) + "px";
        this._container.style.height = height + "px";
    };
    HtmlPreviewPart.prototype.focus = function () {
        this.webview.focus();
    };
    HtmlPreviewPart.prototype.setInput = function (input, options) {
        var _this = this;
        if (this.input === input && this._hasValidModel()) {
            return winjs_base_1.TPromise.as(undefined);
        }
        this._model = undefined;
        this._modelChangeSubscription.dispose();
        if (!(input instanceof htmlInput_1.HtmlInput)) {
            return winjs_base_1.TPromise.wrapError('Invalid input');
        }
        return _super.prototype.setInput.call(this, input, options).then(function () {
            return _this._editorService.resolveEditorModel({ resource: input.getResource() }).then(function (model) {
                if (model instanceof textEditorModel_1.BaseTextEditorModel) {
                    _this._model = model.textEditorModel;
                }
                if (!_this._model) {
                    return winjs_base_1.TPromise.wrapError(nls_1.localize('html.voidInput', "Invalid editor input."));
                }
                _this._modelChangeSubscription = _this._model.onDidChangeContent(function () { return _this.webview.contents = _this._model.getLinesContent(); });
                _this.webview.contents = _this._model.getLinesContent();
            });
        });
    };
    HtmlPreviewPart.ID = 'workbench.editor.htmlPreviewPart';
    HtmlPreviewPart = __decorate([
        __param(0, telemetry_1.ITelemetryService),
        __param(1, editorService_1.IWorkbenchEditorService),
        __param(2, themeService_1.IThemeService),
        __param(3, opener_1.IOpenerService),
        __param(4, workspace_1.IWorkspaceContextService)
    ], HtmlPreviewPart);
    return HtmlPreviewPart;
}(baseEditor_1.BaseEditor));
exports.HtmlPreviewPart = HtmlPreviewPart;
