import { IExtensionManagementService, IExtensionGalleryService, IExtensionTipsService } from 'vs/platform/extensionManagement/common/extensionManagement';
import { IModelService } from 'vs/editor/common/services/modelService';
import { IStorageService } from 'vs/platform/storage/common/storage';
import { IChoiceService } from 'vs/platform/message/common/message';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
export declare class ExtensionTipsService implements IExtensionTipsService {
    private _galleryService;
    private _modelService;
    private storageService;
    private choiceService;
    private extensionsService;
    private instantiationService;
    private configurationService;
    _serviceBrand: any;
    private _recommendations;
    private _availableRecommendations;
    private importantRecommendations;
    private importantRecommendationsIgnoreList;
    private _disposables;
    constructor(_galleryService: IExtensionGalleryService, _modelService: IModelService, storageService: IStorageService, choiceService: IChoiceService, extensionsService: IExtensionManagementService, instantiationService: IInstantiationService, configurationService: IConfigurationService);
    getWorkspaceRecommendations(): string[];
    getRecommendations(): string[];
    private _suggestTips();
    private _suggest(model);
    private _suggestWorkspaceRecommendations();
    dispose(): void;
}
