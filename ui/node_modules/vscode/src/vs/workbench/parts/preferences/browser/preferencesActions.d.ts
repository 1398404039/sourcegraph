import { TPromise } from 'vs/base/common/winjs.base';
import { Action } from 'vs/base/common/actions';
import { IPreferencesService } from 'vs/workbench/parts/preferences/common/preferences';
import { IWorkbenchEditorService } from 'vs/workbench/services/editor/common/editorService';
export declare class OpenGlobalSettingsAction extends Action {
    private preferencesService;
    static ID: string;
    static LABEL: string;
    constructor(id: string, label: string, preferencesService: IPreferencesService);
    run(event?: any): TPromise<void>;
}
export declare class OpenGlobalKeybindingsAction extends Action {
    private preferencesService;
    static ID: string;
    static LABEL: string;
    constructor(id: string, label: string, preferencesService: IPreferencesService);
    run(event?: any): TPromise<any>;
}
export declare class OpenWorkspaceSettingsAction extends Action {
    private preferencesService;
    static ID: string;
    static LABEL: string;
    constructor(id: string, label: string, preferencesService: IPreferencesService);
    run(event?: any): TPromise<void>;
}
export declare class StartSearchDefaultSettingsAction extends Action {
    private workbenchEditorService;
    static ID: string;
    static LABEL: string;
    constructor(id: string, label: string, workbenchEditorService: IWorkbenchEditorService);
    readonly enabled: boolean;
    run(event?: any): TPromise<void>;
    private getDefaultPreferencesEditor();
}
