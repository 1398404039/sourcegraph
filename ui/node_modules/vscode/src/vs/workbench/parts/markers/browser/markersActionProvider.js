/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var nls = require('vs/nls');
var winjs = require('vs/base/common/winjs.base');
var actions = require('vs/base/common/actions');
var instantiation_1 = require('vs/platform/instantiation/common/instantiation');
var markersModel_1 = require('vs/workbench/parts/markers/common/markersModel');
var RemoveResourceAction = (function (_super) {
    __extends(RemoveResourceAction, _super);
    function RemoveResourceAction() {
        _super.call(this, 'remove', nls.localize('RemoveAction.label', "Remove"), 'action-remove');
    }
    RemoveResourceAction.prototype.run = function (context) {
        return context['tree'].refresh();
    };
    return RemoveResourceAction;
}(actions.Action));
var ActionContainer = (function () {
    function ActionContainer(instantiationService) {
        this.cache = {};
        this.instantiationService = instantiationService;
    }
    ActionContainer.prototype.getAction = function (ctor) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var action = this.cache[ctor.ID];
        if (!action) {
            args.unshift(ctor);
            action = this.cache[ctor.ID] = this.instantiationService.createInstance.apply(this.instantiationService, args);
        }
        return action;
    };
    ActionContainer.prototype.dispose = function () {
        var _this = this;
        Object.keys(this.cache).forEach(function (k) {
            _this.cache[k].dispose();
        });
        this.cache = null;
    };
    return ActionContainer;
}());
exports.ActionContainer = ActionContainer;
var ActionProvider = (function (_super) {
    __extends(ActionProvider, _super);
    function ActionProvider(instantiationService) {
        _super.call(this, instantiationService);
    }
    ActionProvider.prototype.hasActions = function (tree, element) {
        return element instanceof markersModel_1.Resource;
    };
    ActionProvider.prototype.getActions = function (tree, element) {
        return winjs.TPromise.as(this.getActionsForResource());
    };
    ActionProvider.prototype.getActionsForResource = function () {
        return [new RemoveResourceAction()];
    };
    ActionProvider.prototype.hasSecondaryActions = function (tree, element) {
        return false;
    };
    ActionProvider.prototype.getSecondaryActions = function (tree, element) {
        return winjs.TPromise.as([]);
    };
    ActionProvider.prototype.getActionItem = function (tree, element, action) {
        return null;
    };
    ActionProvider = __decorate([
        __param(0, instantiation_1.IInstantiationService)
    ], ActionProvider);
    return ActionProvider;
}(ActionContainer));
exports.ActionProvider = ActionProvider;
