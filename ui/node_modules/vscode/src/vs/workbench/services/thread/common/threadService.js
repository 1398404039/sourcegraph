/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var instantiation_1 = require("vs/platform/instantiation/common/instantiation");
exports.IThreadService = instantiation_1.createDecorator('threadService');
var ProxyIdentifier = (function () {
    function ProxyIdentifier(isMain, id, ctor) {
        this.isMain = isMain;
        this.id = id;
        this.methodNames = [];
        for (var prop in ctor.prototype) {
            if (typeof ctor.prototype[prop] === 'function') {
                this.methodNames.push(prop);
            }
        }
    }
    return ProxyIdentifier;
}());
exports.ProxyIdentifier = ProxyIdentifier;
function createMainContextProxyIdentifier(identifier, ctor) {
    return new ProxyIdentifier(true, 'm' + identifier, ctor);
}
exports.createMainContextProxyIdentifier = createMainContextProxyIdentifier;
function createExtHostContextProxyIdentifier(identifier, ctor) {
    return new ProxyIdentifier(false, 'e' + identifier, ctor);
}
exports.createExtHostContextProxyIdentifier = createExtHostContextProxyIdentifier;
