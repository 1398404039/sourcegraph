import { ILifecycleService, ShutdownEvent, ShutdownReason } from 'vs/platform/lifecycle/common/lifecycle';
import { IMessageService } from 'vs/platform/message/common/message';
import { IWindowIPCService } from 'vs/workbench/services/window/electron-browser/windowService';
import Event from 'vs/base/common/event';
export declare class LifecycleService implements ILifecycleService {
    private messageService;
    private windowService;
    _serviceBrand: any;
    private _onWillShutdown;
    private _onShutdown;
    private _willShutdown;
    constructor(messageService: IMessageService, windowService: IWindowIPCService);
    readonly willShutdown: boolean;
    readonly onWillShutdown: Event<ShutdownEvent>;
    readonly onShutdown: Event<ShutdownReason>;
    private registerListeners();
    private onBeforeUnload(reason);
}
