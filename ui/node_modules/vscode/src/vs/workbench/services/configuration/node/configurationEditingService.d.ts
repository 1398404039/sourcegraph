import { TPromise } from 'vs/base/common/winjs.base';
import { IWorkbenchEditorService } from 'vs/workbench/services/editor/common/editorService';
import { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';
import { IEnvironmentService } from 'vs/platform/environment/common/environment';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { IFileService } from 'vs/platform/files/common/files';
import { IConfigurationEditingService, ConfigurationTarget, IConfigurationValue } from 'vs/workbench/services/configuration/common/configurationEditing';
export declare const WORKSPACE_STANDALONE_CONFIGURATIONS: {
    'tasks': string;
    'launch': string;
};
export declare class ConfigurationEditingService implements IConfigurationEditingService {
    private configurationService;
    private contextService;
    private environmentService;
    private fileService;
    private editorService;
    _serviceBrand: any;
    constructor(configurationService: IConfigurationService, contextService: IWorkspaceContextService, environmentService: IEnvironmentService, fileService: IFileService, editorService: IWorkbenchEditorService);
    writeConfiguration(target: ConfigurationTarget, value: IConfigurationValue): TPromise<void>;
    private wrapError(code, target);
    private toErrorMessage(error, target);
    private applyEdits(content, edit);
    private validate(target, operation);
    private getConfigurationEditOperation(target, config);
}
