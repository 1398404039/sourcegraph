/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var errors_1 = require('vs/base/common/errors');
var winjs_base_1 = require('vs/base/common/winjs.base');
var extHost_protocol_1 = require('./extHost.protocol');
var RemoteTelemetryService = (function () {
    function RemoteTelemetryService(name, threadService) {
        this._name = name;
        this._proxy = threadService.get(extHost_protocol_1.MainContext.MainThreadTelemetry);
    }
    Object.defineProperty(RemoteTelemetryService.prototype, "isOptedIn", {
        get: function () {
            throw errors_1.notImplemented();
        },
        enumerable: true,
        configurable: true
    });
    RemoteTelemetryService.prototype.getExperiments = function () {
        throw errors_1.notImplemented();
    };
    RemoteTelemetryService.prototype.getTelemetryInfo = function () {
        return this._proxy.$getTelemetryInfo();
    };
    RemoteTelemetryService.prototype.publicLog = function (eventName, data) {
        data = data || Object.create(null);
        data[this._name] = true;
        this._proxy.$publicLog(eventName, data);
        return winjs_base_1.TPromise.as(null);
    };
    RemoteTelemetryService.prototype.timedPublicLog = function () {
        throw errors_1.notImplemented();
    };
    RemoteTelemetryService.prototype.addTelemetryAppender = function () {
        throw errors_1.notImplemented();
    };
    return RemoteTelemetryService;
}());
exports.RemoteTelemetryService = RemoteTelemetryService;
