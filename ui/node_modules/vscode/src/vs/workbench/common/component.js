/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var lifecycle_1 = require('vs/base/common/lifecycle');
var memento_1 = require('vs/workbench/common/memento');
var WorkbenchComponent = (function () {
    function WorkbenchComponent(id) {
        this._toUnbind = [];
        this.id = id;
        this.componentMemento = new memento_1.Memento(this.id);
    }
    Object.defineProperty(WorkbenchComponent.prototype, "toUnbind", {
        get: function () {
            return this._toUnbind;
        },
        enumerable: true,
        configurable: true
    });
    WorkbenchComponent.prototype.getId = function () {
        return this.id;
    };
    WorkbenchComponent.prototype.getMemento = function (storageService, scope) {
        if (scope === void 0) { scope = memento_1.Scope.GLOBAL; }
        return this.componentMemento.getMemento(storageService, scope);
    };
    WorkbenchComponent.prototype.saveMemento = function () {
        this.componentMemento.saveMemento();
    };
    WorkbenchComponent.prototype.shutdown = function () {
        // Save Memento
        this.saveMemento();
    };
    WorkbenchComponent.prototype.dispose = function () {
        this._toUnbind = lifecycle_1.dispose(this._toUnbind);
    };
    return WorkbenchComponent;
}());
exports.WorkbenchComponent = WorkbenchComponent;
