/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var abstractState_1 = require("vs/editor/common/modes/abstractState");
var TMState = (function () {
    function TMState(modeId, parentEmbedderState, ruleStack) {
        this._modeId = modeId;
        this._parentEmbedderState = parentEmbedderState;
        this._ruleStack = ruleStack;
    }
    TMState.prototype.clone = function () {
        var parentEmbedderStateClone = abstractState_1.AbstractState.safeClone(this._parentEmbedderState);
        return new TMState(this._modeId, parentEmbedderStateClone, this._ruleStack);
    };
    TMState.prototype.equals = function (other) {
        if (!other || !(other instanceof TMState)) {
            return false;
        }
        var otherState = other;
        // Equals on `_parentEmbedderState`
        if (!abstractState_1.AbstractState.safeEquals(this._parentEmbedderState, otherState._parentEmbedderState)) {
            return false;
        }
        // Equals on `_ruleStack`
        if (this._ruleStack === null && otherState._ruleStack === null) {
            return true;
        }
        if (this._ruleStack === null || otherState._ruleStack === null) {
            return false;
        }
        return this._ruleStack.equals(otherState._ruleStack);
    };
    TMState.prototype.getModeId = function () {
        return this._modeId;
    };
    TMState.prototype.getStateData = function () {
        return this._parentEmbedderState;
    };
    TMState.prototype.setStateData = function (state) {
        this._parentEmbedderState = state;
    };
    TMState.prototype.getRuleStack = function () {
        return this._ruleStack;
    };
    TMState.prototype.setRuleStack = function (ruleStack) {
        this._ruleStack = ruleStack;
    };
    return TMState;
}());
exports.TMState = TMState;
