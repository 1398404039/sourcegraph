/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var lifecycle_1 = require('vs/base/common/lifecycle');
var event_1 = require('vs/base/common/event');
var dom = require('vs/base/browser/dom');
var position_1 = require('vs/editor/common/core/position');
var editorBrowser_1 = require('vs/editor/browser/editorBrowser');
var LightBulbWidget = (function () {
    function LightBulbWidget(editor) {
        this._onClick = new event_1.Emitter();
        this._toDispose = [];
        this._editor = editor;
        this._editor.addContentWidget(this);
    }
    LightBulbWidget.prototype.dispose = function () {
        this._editor.removeContentWidget(this);
        this._toDispose = lifecycle_1.dispose(this._toDispose);
    };
    Object.defineProperty(LightBulbWidget.prototype, "onClick", {
        get: function () {
            return this._onClick.event;
        },
        enumerable: true,
        configurable: true
    });
    LightBulbWidget.prototype.getId = function () {
        return '__lightBulbWidget';
    };
    Object.defineProperty(LightBulbWidget.prototype, "allowEditorOverflow", {
        // Editor.IContentWidget.allowEditorOverflow
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    LightBulbWidget.prototype.getDomNode = function () {
        var _this = this;
        if (!this._domNode) {
            this._domNode = document.createElement('div');
            this._domNode.style.width = '20px';
            this._domNode.style.height = '20px';
            this._domNode.className = 'lightbulb-glyph';
            this._toDispose.push(dom.addDisposableListener(this._domNode, 'mousedown', function (e) {
                e.preventDefault();
                _this._onClick.fire(_this._position);
            }));
        }
        return this._domNode;
    };
    LightBulbWidget.prototype.getPosition = function () {
        return this._visible
            ? { position: this._position, preference: [editorBrowser_1.ContentWidgetPositionPreference.BELOW, editorBrowser_1.ContentWidgetPositionPreference.ABOVE] }
            : null;
    };
    LightBulbWidget.prototype.show = function (where) {
        if (this._visible && position_1.Position.equals(this._position, where)) {
            return;
        }
        this._position = where;
        this._visible = true;
        this._editor.layoutContentWidget(this);
    };
    LightBulbWidget.prototype.hide = function () {
        if (this._visible) {
            this._visible = false;
            this._editor.layoutContentWidget(this);
        }
    };
    return LightBulbWidget;
}());
exports.LightBulbWidget = LightBulbWidget;
