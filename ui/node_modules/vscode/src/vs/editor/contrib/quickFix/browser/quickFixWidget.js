/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var dom_1 = require('vs/base/browser/dom');
var position_1 = require('vs/editor/common/core/position');
var actions_1 = require('vs/base/common/actions');
var QuickFixContextMenu = (function () {
    function QuickFixContextMenu(editor, contextMenuService, commandService) {
        this._editor = editor;
        this._contextMenuService = contextMenuService;
        this._commandService = commandService;
    }
    QuickFixContextMenu.prototype.show = function (fixes, at) {
        var _this = this;
        var actions = fixes.then(function (value) {
            return value.map(function (_a) {
                var command = _a.command;
                return new actions_1.Action(command.id, command.title, undefined, true, function () {
                    return (_a = _this._commandService).executeCommand.apply(_a, [command.id].concat(command.arguments));
                    var _a;
                });
            });
        });
        this._contextMenuService.showContextMenu({
            getAnchor: function () {
                if (position_1.Position.isIPosition(at)) {
                    at = _this._toCoords(at);
                }
                return at;
            },
            getActions: function () { return actions; },
            onHide: function () { _this._visible = false; }
        });
    };
    Object.defineProperty(QuickFixContextMenu.prototype, "isVisible", {
        get: function () {
            return this._visible;
        },
        enumerable: true,
        configurable: true
    });
    QuickFixContextMenu.prototype._toCoords = function (position) {
        this._editor.revealPosition(position);
        this._editor.render();
        // Translate to absolute editor position
        var cursorCoords = this._editor.getScrolledVisiblePosition(this._editor.getPosition());
        var editorCoords = dom_1.getDomNodePagePosition(this._editor.getDomNode());
        var x = editorCoords.left + cursorCoords.left;
        var y = editorCoords.top + cursorCoords.top + cursorCoords.height;
        return { x: x, y: y };
    };
    return QuickFixContextMenu;
}());
exports.QuickFixContextMenu = QuickFixContextMenu;
