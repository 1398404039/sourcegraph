import Event from 'vs/base/common/event';
import { TPromise } from 'vs/base/common/winjs.base';
import { IMarkerService } from 'vs/platform/markers/common/markers';
import { Selection } from 'vs/editor/common/core/selection';
import { IPosition, IRange } from 'vs/editor/common/editorCommon';
import { ICodeEditor } from 'vs/editor/browser/editorBrowser';
import { CodeAction } from 'vs/editor/common/modes';
export interface QuickFixComputeEvent {
    type: 'auto' | 'manual';
    range: IRange;
    position: IPosition;
    fixes: TPromise<CodeAction[]>;
}
export declare class QuickFixModel {
    private _editor;
    private _markerService;
    private _quickFixOracle;
    private _onDidChangeFixes;
    private _disposables;
    constructor(editor: ICodeEditor, markerService: IMarkerService);
    dispose(): void;
    readonly onDidChangeFixes: Event<QuickFixComputeEvent>;
    private _update();
    triggerManual(selection: Selection): void;
}
