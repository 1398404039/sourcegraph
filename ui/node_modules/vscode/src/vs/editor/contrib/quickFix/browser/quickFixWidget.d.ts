import './quickFix.css';
import Event from 'vs/base/common/event';
import { TPromise } from 'vs/base/common/winjs.base';
import { IPosition } from 'vs/editor/common/editorCommon';
import { ICodeEditor, IContentWidget, IContentWidgetPosition } from 'vs/editor/browser/editorBrowser';
import { IQuickFix2 } from '../common/quickFix';
export declare class QuickFixList {
    domNode: HTMLDivElement;
    private _editor;
    private _onDidSelect;
    private _widget;
    private _widgetSubscription;
    constructor(editor: ICodeEditor);
    dispose(): void;
    protected createElements(): void;
    readonly onDidSelectQuickFix: Event<IQuickFix2>;
    setInput(fixes: IQuickFix2[]): void;
    focusNext(): void;
    focusPrevious(): void;
    focusNextPage(): void;
    focusPreviousPage(): void;
    select(): void;
}
export declare class Message {
    static Loading: string;
    static NoFixes: string;
    domNode: HTMLDivElement;
    constructor(editor: ICodeEditor);
    value: string;
}
export declare class QuickFixContentWidget implements IContentWidget {
    domNode: HTMLDivElement;
    message: Message;
    list: QuickFixList;
    private _editor;
    private _position;
    constructor(editor: ICodeEditor);
    dispose(): void;
    getId(): string;
    getDomNode(): HTMLElement;
    show(fixes: TPromise<IQuickFix2[]>, position: IPosition): void;
    private _layout(heightInLines?);
    hide(): void;
    isVisible(): boolean;
    isListVisible(): boolean;
    isMessageVisible(): boolean;
    getPosition(): IContentWidgetPosition;
}
