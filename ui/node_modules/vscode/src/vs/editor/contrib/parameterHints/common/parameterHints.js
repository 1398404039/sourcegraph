/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var winjs_base_1 = require('vs/base/common/winjs.base');
var editorCommonExtensions_1 = require('vs/editor/common/editorCommonExtensions');
var modes_1 = require('vs/editor/common/modes');
var async_1 = require('vs/base/common/async');
var contextkey_1 = require('vs/platform/contextkey/common/contextkey');
exports.Context = {
    Visible: new contextkey_1.RawContextKey('parameterHintsVisible', false),
    MultipleSignatures: new contextkey_1.RawContextKey('parameterHintsMultipleSignatures', false),
};
function provideSignatureHelp(model, position) {
    var support = modes_1.SignatureHelpProviderRegistry.ordered(model)[0];
    if (!support) {
        return winjs_base_1.TPromise.as(undefined);
    }
    return async_1.asWinJsPromise(function (token) { return support.provideSignatureHelp(model, position, token); });
}
exports.provideSignatureHelp = provideSignatureHelp;
editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeSignatureHelpProvider', provideSignatureHelp);
