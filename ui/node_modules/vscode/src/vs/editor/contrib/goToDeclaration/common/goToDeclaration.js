/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var errors_1 = require('vs/base/common/errors');
var winjs_base_1 = require('vs/base/common/winjs.base');
var editorCommonExtensions_1 = require('vs/editor/common/editorCommonExtensions');
var modes_1 = require('vs/editor/common/modes');
var async_1 = require('vs/base/common/async');
function getDeclarationsAtPosition(model, position) {
    var provider = modes_1.DefinitionProviderRegistry.ordered(model);
    // get results
    var promises = provider.map(function (provider, idx) {
        return async_1.asWinJsPromise(function (token) {
            return provider.provideDefinition(model, position, token);
        }).then(function (result) {
            return result;
        }, function (err) {
            errors_1.onUnexpectedError(err);
        });
    });
    return winjs_base_1.TPromise.join(promises).then(function (allReferences) {
        var result = [];
        for (var _i = 0, allReferences_1 = allReferences; _i < allReferences_1.length; _i++) {
            var references = allReferences_1[_i];
            if (Array.isArray(references)) {
                result.push.apply(result, references);
            }
            else if (references) {
                result.push(references);
            }
        }
        return result;
    });
}
exports.getDeclarationsAtPosition = getDeclarationsAtPosition;
editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeDefinitionProvider', getDeclarationsAtPosition);
