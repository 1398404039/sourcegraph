/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var errors_1 = require('vs/base/common/errors');
var winjs_base_1 = require('vs/base/common/winjs.base');
var editorCommonExtensions_1 = require('vs/editor/common/editorCommonExtensions');
var modes_1 = require('vs/editor/common/modes');
var async_1 = require('vs/base/common/async');
function provideReferences(model, position) {
    // collect references from all providers
    var promises = modes_1.ReferenceProviderRegistry.ordered(model).map(function (provider) {
        return async_1.asWinJsPromise(function (token) {
            return provider.provideReferences(model, position, { includeDeclaration: true }, token);
        }).then(function (result) {
            if (Array.isArray(result)) {
                return result;
            }
        }, function (err) {
            errors_1.onUnexpectedError(err);
        });
    });
    return winjs_base_1.TPromise.join(promises).then(function (references) {
        var result = [];
        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {
            var ref = references_1[_i];
            if (ref) {
                result.push.apply(result, ref);
            }
        }
        return result;
    });
}
exports.provideReferences = provideReferences;
editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeReferenceProvider', provideReferences);
