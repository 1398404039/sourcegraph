/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var winjs_base_1 = require("vs/base/common/winjs.base");
var instantiation_1 = require("vs/platform/instantiation/common/instantiation");
var contextkey_1 = require("vs/platform/contextkey/common/contextkey");
var AbstractInternalEditorAction = (function () {
    function AbstractInternalEditorAction(id, label, alias, editor) {
        this.id = id;
        this.label = label;
        this.alias = alias;
        this._editor = editor;
    }
    return AbstractInternalEditorAction;
}());
exports.AbstractInternalEditorAction = AbstractInternalEditorAction;
var InternalEditorAction = (function (_super) {
    __extends(InternalEditorAction, _super);
    function InternalEditorAction(actual, editor, instantiationService, contextKeyService) {
        var _this = _super.call(this, actual.id, actual.label, actual.alias, editor) || this;
        _this._actual = actual;
        _this._instantiationService = instantiationService;
        _this._contextKeyService = contextKeyService;
        return _this;
    }
    InternalEditorAction.prototype.isSupported = function () {
        return this._contextKeyService.contextMatchesRules(this._actual.precondition);
    };
    InternalEditorAction.prototype.run = function () {
        var _this = this;
        if (!this.isSupported()) {
            return winjs_base_1.TPromise.as(void 0);
        }
        return this._instantiationService.invokeFunction(function (accessor) {
            return winjs_base_1.TPromise.as(_this._actual.runEditorCommand(accessor, _this._editor, null));
        });
    };
    return InternalEditorAction;
}(AbstractInternalEditorAction));
InternalEditorAction = __decorate([
    __param(2, instantiation_1.IInstantiationService),
    __param(3, contextkey_1.IContextKeyService)
], InternalEditorAction);
exports.InternalEditorAction = InternalEditorAction;
var DynamicEditorAction = (function (_super) {
    __extends(DynamicEditorAction, _super);
    function DynamicEditorAction(descriptor, editor) {
        var _this = _super.call(this, descriptor.id, descriptor.label, descriptor.label, editor) || this;
        _this._run = descriptor.run;
        return _this;
    }
    DynamicEditorAction.prototype.isSupported = function () {
        return true;
    };
    DynamicEditorAction.prototype.run = function () {
        return winjs_base_1.TPromise.as(this._run(this._editor));
    };
    return DynamicEditorAction;
}(AbstractInternalEditorAction));
exports.DynamicEditorAction = DynamicEditorAction;
