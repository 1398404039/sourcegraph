import { TPromise } from 'vs/base/common/winjs.base';
import { IActionDescriptor, ICommonCodeEditor, IEditorAction } from 'vs/editor/common/editorCommon';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { EditorAction } from 'vs/editor/common/editorCommonExtensions';
import { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';
export declare abstract class AbstractInternalEditorAction {
    id: string;
    label: string;
    alias: string;
    protected _editor: ICommonCodeEditor;
    constructor(id: string, label: string, alias: string, editor: ICommonCodeEditor);
}
export declare class InternalEditorAction extends AbstractInternalEditorAction implements IEditorAction {
    private _actual;
    private _instantiationService;
    private _contextKeyService;
    constructor(actual: EditorAction, editor: ICommonCodeEditor, instantiationService: IInstantiationService, contextKeyService: IContextKeyService);
    isSupported(): boolean;
    run(): TPromise<void>;
}
export declare class DynamicEditorAction extends AbstractInternalEditorAction implements IEditorAction {
    private _run;
    constructor(descriptor: IActionDescriptor, editor: ICommonCodeEditor);
    isSupported(): boolean;
    run(): TPromise<void>;
}
