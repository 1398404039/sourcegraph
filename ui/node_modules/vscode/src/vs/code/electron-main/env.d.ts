import { IProductConfiguration } from 'vs/platform/product';
import { ParsedArgs } from 'vs/platform/environment/node/argv';
export interface IProcessEnvironment {
    [key: string]: string;
}
export interface ICommandLineArguments extends ParsedArgs {
    paths?: string[];
}
export declare const IEnvService: {
    (...args: any[]): void;
    type: IEnvService;
};
export interface IEnvService {
    _serviceBrand: any;
    cliArgs: ICommandLineArguments;
    isBuilt: boolean;
    product: IProductConfiguration;
    updateUrl: string;
    quality: string;
    userHome: string;
    appRoot: string;
    currentWorkingDirectory: string;
    appHome: string;
    appSettingsHome: string;
    appSettingsPath: string;
    appKeybindingsPath: string;
}
export declare class EnvService implements IEnvService {
    _serviceBrand: any;
    private _cliArgs;
    readonly cliArgs: ICommandLineArguments;
    private _userExtensionsHome;
    readonly userExtensionsHome: string;
    readonly isBuilt: boolean;
    readonly product: IProductConfiguration;
    readonly updateUrl: string;
    readonly quality: string;
    private _userHome;
    readonly userHome: string;
    private _appRoot;
    readonly appRoot: string;
    private _currentWorkingDirectory;
    readonly currentWorkingDirectory: string;
    private _appHome;
    readonly appHome: string;
    private _appSettingsHome;
    readonly appSettingsHome: string;
    private _appSettingsPath;
    readonly appSettingsPath: string;
    private _appKeybindingsPath;
    readonly appKeybindingsPath: string;
    constructor();
}
export interface IParsedPath {
    path: string;
    line?: number;
    column?: number;
}
export declare function parseLineAndColumnAware(rawPath: string): IParsedPath;
