import { IEnvironmentService } from 'vs/platform/environment/common/environment';
import { IWindowsService } from 'vs/code/electron-main/windows';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { IStorageService } from 'vs/code/electron-main/storage';
import { IUpdateService } from 'vs/code/electron-main/update-manager';
export declare class VSCodeMenu {
    private storageService;
    private updateService;
    private configurationService;
    private windowsService;
    private environmentService;
    private static lastKnownKeybindingsMapStorageKey;
    private static MAX_MENU_RECENT_ENTRIES;
    private currentAutoSaveSetting;
    private isQuitting;
    private appMenuInstalled;
    private actionIdKeybindingRequests;
    private mapLastKnownKeybindingToActionId;
    private mapResolvedKeybindingToActionId;
    private keybindingsResolved;
    constructor(storageService: IStorageService, updateService: IUpdateService, configurationService: IConfigurationService, windowsService: IWindowsService, environmentService: IEnvironmentService);
    ready(): void;
    private registerListeners();
    private onConfigurationUpdated(config);
    private resolveKeybindings(win);
    private updateMenu();
    private onOpen(path);
    private onClose(remainingWindowCount);
    private install();
    private setMacApplicationMenu(macApplicationMenu);
    private setFileMenu(fileMenu);
    private getPreferencesMenu();
    private quit();
    private setOpenRecentMenu(openRecentMenu);
    private createOpenRecentMenuItem(path);
    private createRoleMenuItem(label, actionId, role);
    private setEditMenu(winLinuxEditMenu);
    private setViewMenu(viewMenu);
    private setGotoMenu(gotoMenu);
    private setMacWindowMenu(macWindowMenu);
    private toggleDevTools();
    private setHelpMenu(helpMenu);
    private getUpdateMenuItems();
    private createMenuItem(label, actionId, enabled?);
    private createMenuItem(label, click, enabled?);
    private createDevToolsAwareMenuItem(label, actionId, devToolsFocusedFn);
    private getAccelerator(actionId);
    private openAboutDialog();
    private openUrl(url, id);
    private reportMenuActionTelemetry(id);
}
