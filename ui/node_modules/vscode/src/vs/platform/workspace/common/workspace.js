/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
var uri_1 = require("vs/base/common/uri");
var instantiation_1 = require("vs/platform/instantiation/common/instantiation");
var paths = require("vs/base/common/paths");
exports.IWorkspaceContextService = instantiation_1.createDecorator('contextService');
var WorkspaceContextService = (function () {
    function WorkspaceContextService(workspace) {
        this.workspace = workspace;
    }
    WorkspaceContextService.prototype.getWorkspace = function () {
        return this.workspace;
    };
    WorkspaceContextService.prototype.isInsideWorkspace = function (resource) {
        if (resource && this.workspace) {
            return paths.isEqualOrParent(resource.fsPath, this.workspace.resource.fsPath);
        }
        return false;
    };
    WorkspaceContextService.prototype.toWorkspaceRelativePath = function (resource) {
        if (this.isInsideWorkspace(resource)) {
            return paths.normalize(paths.relative(this.workspace.resource.fsPath, resource.fsPath));
        }
        return null;
    };
    WorkspaceContextService.prototype.toResource = function (workspaceRelativePath) {
        if (typeof workspaceRelativePath === 'string' && this.workspace) {
            return uri_1.default.file(paths.join(this.workspace.resource.fsPath, workspaceRelativePath));
        }
        return null;
    };
    return WorkspaceContextService;
}());
exports.WorkspaceContextService = WorkspaceContextService;
