// The Sourcegraph site configuration for development servers.
{
  "appURL": "http://localhost:3080",
  "experimentalFeatures": {
    "searchTimeoutParameter": "enabled",
    "hostSurveysLocally": "enabled"
  },
  "disablePublicRepoRedirects": true,
  "phabricator": [
    {
      "url": "https://phabricator.sgdev.org",
      // Uncomment one or the other of these configs depending on your testing needs.
      // Both "token" and "repos" are optional but you need to have at least one set.
      "repos": [
        {
          "path": "gitolite.sgdev.org/testing",
          "callsign": "TEST"
        },
        {
          "path": "github.com/sgtest/jump",
          "callsign": "JUMP"
        },
        {
          "path": "git-codecommit.us-west-1.amazonaws.com/stripe-go",
          "callsign": "STRIPEGO"
        }
      ]
      // "token": "api-agswx2nwodkweitoo3t5l4dcc5xu"
    }
  ],
  // To test with Gitolite, set up SSH authentication for gitolite.sgdev.org using
  // this private key: https://sourcegraph.sgdev.org/github.com/sourcegraph/infrastructure/-/blob/on-prem/dogfood/id_rsa.
  //
  // "gitolite": [
  //   {
  //     "host": "git@gitolite.sgdev.org",
  //     "prefix": "gitolite.sgdev.org/",
  //     "blacklist": "blacklist",
  //   }
  // ],
  "github": [
    {
      "url": "https://github.com",
      "token": "e99201f23d4c8d2d7d3df4c0cb23a4804ad5f1b8" // unprivileged sqs-test user
    },
    {
      "url": "https://ghe.sgdev.org",
      "token": "23993bbf8e0fee068b8f70db05fc445d5a7a83da"
    }
  ],
  "repos.list": [{ "path": "github.com/sgtest/jump", "url": "https://github.com/sgtest/jump" }],
  "bitbucketServer": [
    // creds: admin / WhYw6x9GSxmbmg4m
    {
      "url": "https://bitbucket.sgdev.org",
      "token": "NDczNDE0NDg0OTk3OrfPrmh/lmU2c3P7Xat+d/aOoZb/"
      // You can also specify username/password instead:
      //
      // "username": "admin",
      // "password": "WhYw6x9GSxmbmg4m"
    }
  ],
  "awsCodeCommit": [
    // arn:aws:iam::185007729374:user/code-commit-reader, which has read-only perms to AWS CodeCommit and no access
    // to secret repositories.
    {
      "region": "us-west-1",
      "accessKeyID": "AKIAIG7POXJDKGNQXCPA",
      "secretAccessKey": "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",
      "repositoryPathPattern": "git-codecommit.us-west-1.amazonaws.com/{name}"
    }
  ],
  "gitlab": [
    {
      // This access token belongs to keegan+gitlabbot@sourcegraph.com
      "url": "https://gitlab.com",
      "token": "Ama8LCe_mrrCThZWvr78"
    }
  ],
  "lightstepProject": "sourcegraph-dev",
  "lightstepAccessToken": "025f49bbe1eb074930a1de12c90542d5",
  "repoListUpdateInterval": 1,
  "auth.allowSignup": true,
  "auth.provider": "builtin",
  "email.address": "noreply@sourcegraph.com",
  "email.smtp": {
    "host": "smtp.mandrillapp.com",
    "port": 587,
    "authentication": "PLAIN",
    "username": "beyang@sourcegraph.com",
    "password": "Gk9_YjhgJMvKu4OW9SK2aw"
  },
  "langservers": [
    {
      "address": "tcp://localhost:4389",
      "language": "go"
    }
  ],
  "update.channel": "release",
  "settings": {
    "search.scopes": [
      {
        "name": "Test code",
        "value": "file:(test|spec)"
      },
      {
        "name": "Non-test files",
        "value": "-file:(test|spec)"
      },
      {
        "name": "JSON files",
        "value": "file:\\.json$"
      },
      {
        "name": "Text documents",
        "value": "file:\\.(txt|md)$"
      },
      {
        "name": "Non-vendor code",
        "value": "-file:vendor/ -file:node_modules/"
      },
      {
        "name": "Vendored code",
        "value": "file:(vendor|node_modules)/"
      }
    ]
  },
  "corsOrigin": "https://github.com https://phabricator.sgdev.org",

  // AUTHENTICATION
  //
  // See dev/auth-provider/README.md for information on how to use the Keycloak OpenID/SAML auth
  // provider for local dev.
  //
  // Log in via Keycloak with username "alice" or "bob" (password is "q" for both).
  //
  // OPENID
  //
  // To test OpenID, set "auth.provider" to "openidconnect" and uncomment this section.
  //
  // "auth.openIDConnect": {
  //   "issuer": "http://localhost:3220/auth/realms/master",
  //   "clientID": "sourcegraph-client-openid",
  //   "clientSecret": "3153e9d7-2d06-49d7-be84-cc61c07173a4"
  // }
  //
  // SAML
  //
  // To test SAML, set "auth.provider" to "saml" and uncomment this section.
  //
  // TODO(sqs): Keycloak's SAML support is currently broken (https://issues.jboss.org/browse/KEYCLOAK-7032)
  //
  // "auth.saml": {
  //   "identityProviderMetadataURL": "http://localhost:3220/auth/realms/master/protocol/saml/descriptor",
  //   "serviceProviderCertificate":
  //     "-----BEGIN CERTIFICATE-----\nMIICvTCCAaUCBgFjJFU+ZzANBgkqhkiG9w0BAQsFADAiMSAwHgYDVQQDDBdzb3VyY2VncmFwaC1jbGllbnQtc2FtbDAeFw0xODA1MDMwNDQ3MzZaFw0yODA1MDMwNDQ5MTZaMCIxIDAeBgNVBAMMF3NvdXJjZWdyYXBoLWNsaWVudC1zYW1sMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgq7miil7oDONBrArqhBDr+E56mdhrgbO1PMDnbMPKxmshdEChVZ1Gu8PyoYU1Dc1bukfL3vXWgXv3kVYnJhRJMpiUHe5RGRPD5moUKiZhGTIocIczC1Pg5L7C5ulVsiuIWCLfZBt/4qo53C/jeeemwo/NOWuC76SvxDgHLFkwkRSMbCP83yNXdQ4leC60e4Byyd2De1gT6Fb5h3vW+qYEXYvKLdTC4JJIxgCzKm3OvAP83ibGL6/NJK1jiSXZFP/95ByIhOqE+0L1VT0e1nUnxmom/xIz7wT/ffJJbefKPohIE5Tapc8qjrvVRuEkHxbMgILRjKCypsRk3n/9Vp5KQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBrabQMIwg4XM3xadTA8v/3WkQNe822sWXLZZaOUSqDBAfCyvVTRzhlc92U7vd52WjvmDPGUYWj3EWDjqJoFZCo3b1s8yXlysIzlBrg/jxq7Nv8A93phdHzgznIw1Bk0gYi0PsqHPoK6W752+JHz9gtYdc6O70iJXg6pMieDjb2wP8kI1PnGea9coli+S1TMKA1C42S1LbcXkcMzDfJYS8zEFUWqLWdYFkfF47hb7RO2XrrPEbIR/MtS7O/nfIPvzspSsgNnbWMRJPA3xxSgHzMTVO932pvEmp7EfW3rYIJvoyZqmS5HU7Lv8yKMFwhlBjYFzGrXom7nTi0aGZlrOm8\n-----END CERTIFICATE-----",
  //   "serviceProviderPrivateKey":
  //     "-----BEGIN PRIVATE KEY-----\nMIIEowIBAAKCAQEAgq7miil7oDONBrArqhBDr+E56mdhrgbO1PMDnbMPKxmshdEChVZ1Gu8PyoYU1Dc1bukfL3vXWgXv3kVYnJhRJMpiUHe5RGRPD5moUKiZhGTIocIczC1Pg5L7C5ulVsiuIWCLfZBt/4qo53C/jeeemwo/NOWuC76SvxDgHLFkwkRSMbCP83yNXdQ4leC60e4Byyd2De1gT6Fb5h3vW+qYEXYvKLdTC4JJIxgCzKm3OvAP83ibGL6/NJK1jiSXZFP/95ByIhOqE+0L1VT0e1nUnxmom/xIz7wT/ffJJbefKPohIE5Tapc8qjrvVRuEkHxbMgILRjKCypsRk3n/9Vp5KQIDAQABAoIBAAt5xl7dk7CWtkyfDcaKVRdNxOMznt1EVcdXa7rebXeQcpjxqLICzJfH5HAZZBzamEOcDxQBYQDTwqOXHVfq/D0p1IZSbR93W4X4LVKf65M3snKZ9CNt2yynrInxagx75OajbrxhAXfOOlTQjtGsRD5DIRfJD4aSfppupe9/GGUCsL4cjQ8CEdpdG6VmD7XuWtR1slyVjhcSAsVf1f46qDnNd8Xt6vaZp+nFijBDq1+nJs0RlvEKJsCqurm1LBgvsGAQSJC4FHoj2GOkNhMNa0KQn3WMffFTMZw59zCo3i4CL/icFjyvxSE/gpPuEx8eF292NVmBIazNtQ95UOZ99u0CgYEAvCk9gBuVRoMYsIiQGD/RWv0lJ2lKZtBKooG37BEUXYthAmq6adxV2cmY4PmvKPnsoQklsYbB5nZPBWd97nEliqJo8496ZE3VwQ5gTsesRcvbLBfwcFr+gGnS9Lk3ZjbIurclp/yPR/H4PggI9EgbNc904mRWy8PgFDcsWpjt52sCgYEAscybT72btMwZb0wBLvWpft3/3lr59BZPTXWKvVFNbEekYnXC3YG04tpja8OBRDhFeGzGepn9kU+/PpxblNPgAn0GuhdDUpM7hbIQ/uDwlHmpERTioeIprFZJa7o1zzcgGNdio0yrIMHXI+oRlSrVT6nrBv+6vrmJCpBgT+royrsCgYBDs98SIlqi5XbTxj96yjOtNprQxHzl45qHQH+KLFcUlZsRQI/UmVg2peghQxX4e3zeMKlkaCWKpBUoz6UrT4D/khKLWJvkTXFVJrQWhJgDASfahL6Z3tPmJq2mKqK5X4r4S//7os93RqRYxZFbPDq2MPBQqWPlq5QMEhIegxpPAwKBgQCjevE3UazwgVXFqwnPhtwRJciVR+tZzoWeQDyQNEhPDlSMn6DMEO4kRA90T6/07RSbVNDue9bVnJDI3fWrE2F+iDz+MFObgnsRRBgycttiebbFWQHFPXF532Dk57OAUzx0+t3cLquOlAzgHeGK2XaHKEJNDihEI85o4zVbZjAj7wKBgCM4j1ORwVSBq0/yo+R9akh27ryaqIX+XqTxY66n7vftP6H8+uxEs2TwbxRWT87DI7HUoWYfaF2FaSca/YtHDNT5HZQJ/9nqs1jLc6+aRF04IdNy2IXZLwSNOnwN6eooKvlbkdLQRicvyDZWwvzrD41sSABJ9b7CL2PZDqF4OW/i\n-----END PRIVATE KEY-----"
  // }

  "secretKey": "OVSHB1Yru3rlsQ0eKNi2GXCZ47zU7DCK"
}
